// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance struct {
	Id          string                                                                                `json:"id"`
	Version     int                                                                                   `json:"version"`
	SpecVersion int                                                                                   `json:"specVersion"`
	Question    CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails `json:"question"`
	Operations  []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation   `json:"operations"`
}

// GetId returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Id, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetId() string { return v.Id }

// GetVersion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetQuestion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Question, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetQuestion() CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails {
	return v.Question
}

// GetOperations returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetOperations() []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation {
	return v.Operations
}

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation includes the requested fields of the GraphQL type RuleOperation.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation struct {
	When    map[string]interface{}   `json:"when"`
	Actions []map[string]interface{} `json:"actions"`
}

// GetWhen returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation.When, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation) GetWhen() map[string]interface{} {
	return v.When
}

// GetActions returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation.Actions, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation) GetActions() []map[string]interface{} {
	return v.Actions
}

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails includes the requested fields of the GraphQL type RuleQuestionDetails.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails struct {
	Queries []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query `json:"queries"`
}

// GetQueries returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails.Queries, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails) GetQueries() []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query {
	return v.Queries
}

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query includes the requested fields of the GraphQL type J1Query.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query struct {
	Name           string `json:"name"`
	Query          string `json:"query"`
	Version        string `json:"version"`
	IncludeDeleted bool   `json:"includeDeleted"`
}

// GetName returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Name, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetName() string {
	return v.Name
}

// GetQuery returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Query, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetQuery() string {
	return v.Query
}

// GetVersion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Version, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetVersion() string {
	return v.Version
}

// GetIncludeDeleted returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetIncludeDeleted() bool {
	return v.IncludeDeleted
}

type CreateInlineQuestionRuleInstanceInput struct {
	Question        RuleQuestionDetailsInput `json:"question"`
	Templates       map[string]interface{}   `json:"templates"`
	Tags            []string                 `json:"tags"`
	Name            string                   `json:"name"`
	Description     string                   `json:"description"`
	SpecVersion     int                      `json:"specVersion"`
	Operations      []RuleOperationInput     `json:"operations"`
	Outputs         []string                 `json:"outputs"`
	PollingInterval SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure bool                     `json:"notifyOnFailure"`
}

// GetQuestion returns CreateInlineQuestionRuleInstanceInput.Question, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetQuestion() RuleQuestionDetailsInput {
	return v.Question
}

// GetTemplates returns CreateInlineQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns CreateInlineQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns CreateInlineQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns CreateInlineQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns CreateInlineQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns CreateInlineQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns CreateInlineQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns CreateInlineQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns CreateInlineQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetNotifyOnFailure() bool { return v.NotifyOnFailure }

// CreateInlineQuestionRuleInstanceResponse is returned by CreateInlineQuestionRuleInstance on success.
type CreateInlineQuestionRuleInstanceResponse struct {
	CreateQuestionRuleInstance CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance `json:"createQuestionRuleInstance"`
}

// GetCreateQuestionRuleInstance returns CreateInlineQuestionRuleInstanceResponse.CreateQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceResponse) GetCreateQuestionRuleInstance() CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance {
	return v.CreateQuestionRuleInstance
}

// CreateQuestionCreateQuestion includes the requested fields of the GraphQL type Question.
type CreateQuestionCreateQuestion struct {
	Id              string                                                             `json:"id"`
	Title           string                                                             `json:"title"`
	Description     string                                                             `json:"description"`
	PollingInterval SchedulerPollingInterval                                           `json:"pollingInterval"`
	Queries         []CreateQuestionCreateQuestionQueriesQuestionQuery                 `json:"queries"`
	Tags            []string                                                           `json:"tags"`
	Compliance      []CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData `json:"compliance"`
}

// GetId returns CreateQuestionCreateQuestion.Id, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetId() string { return v.Id }

// GetTitle returns CreateQuestionCreateQuestion.Title, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetTitle() string { return v.Title }

// GetDescription returns CreateQuestionCreateQuestion.Description, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetDescription() string { return v.Description }

// GetPollingInterval returns CreateQuestionCreateQuestion.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetQueries returns CreateQuestionCreateQuestion.Queries, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetQueries() []CreateQuestionCreateQuestionQueriesQuestionQuery {
	return v.Queries
}

// GetTags returns CreateQuestionCreateQuestion.Tags, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetTags() []string { return v.Tags }

// GetCompliance returns CreateQuestionCreateQuestion.Compliance, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetCompliance() []CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData {
	return v.Compliance
}

// CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData includes the requested fields of the GraphQL type QuestionComplianceMetaData.
type CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData struct {
	Standard     string   `json:"standard"`
	Requirements []string `json:"requirements"`
	Controls     []string `json:"controls"`
}

// GetStandard returns CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData.Standard, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData) GetStandard() string {
	return v.Standard
}

// GetRequirements returns CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData.Requirements, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData) GetRequirements() []string {
	return v.Requirements
}

// GetControls returns CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData.Controls, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionComplianceQuestionComplianceMetaData) GetControls() []string {
	return v.Controls
}

// CreateQuestionCreateQuestionQueriesQuestionQuery includes the requested fields of the GraphQL type QuestionQuery.
type CreateQuestionCreateQuestionQueriesQuestionQuery struct {
	Name           string          `json:"name"`
	Query          string          `json:"query"`
	Version        string          `json:"version"`
	IncludeDeleted bool            `json:"includeDeleted"`
	ResultsAre     QueryResultsAre `json:"resultsAre"`
}

// GetName returns CreateQuestionCreateQuestionQueriesQuestionQuery.Name, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionQueriesQuestionQuery) GetName() string { return v.Name }

// GetQuery returns CreateQuestionCreateQuestionQueriesQuestionQuery.Query, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionQueriesQuestionQuery) GetQuery() string { return v.Query }

// GetVersion returns CreateQuestionCreateQuestionQueriesQuestionQuery.Version, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionQueriesQuestionQuery) GetVersion() string { return v.Version }

// GetIncludeDeleted returns CreateQuestionCreateQuestionQueriesQuestionQuery.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionQueriesQuestionQuery) GetIncludeDeleted() bool {
	return v.IncludeDeleted
}

// GetResultsAre returns CreateQuestionCreateQuestionQueriesQuestionQuery.ResultsAre, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestionQueriesQuestionQuery) GetResultsAre() QueryResultsAre {
	return v.ResultsAre
}

type CreateQuestionInput struct {
	Title           string                            `json:"title"`
	Name            string                            `json:"name"`
	Tags            []string                          `json:"tags"`
	Description     string                            `json:"description"`
	ShowTrend       bool                              `json:"showTrend"`
	PollingInterval SchedulerPollingInterval          `json:"pollingInterval"`
	Queries         []QuestionQueryInput              `json:"queries"`
	Compliance      []QuestionComplianceMetaDataInput `json:"compliance"`
	Variables       []QuestionVariableInput           `json:"variables"`
}

// GetTitle returns CreateQuestionInput.Title, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetTitle() string { return v.Title }

// GetName returns CreateQuestionInput.Name, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetName() string { return v.Name }

// GetTags returns CreateQuestionInput.Tags, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetTags() []string { return v.Tags }

// GetDescription returns CreateQuestionInput.Description, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetDescription() string { return v.Description }

// GetShowTrend returns CreateQuestionInput.ShowTrend, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetShowTrend() bool { return v.ShowTrend }

// GetPollingInterval returns CreateQuestionInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetPollingInterval() SchedulerPollingInterval { return v.PollingInterval }

// GetQueries returns CreateQuestionInput.Queries, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetQueries() []QuestionQueryInput { return v.Queries }

// GetCompliance returns CreateQuestionInput.Compliance, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetCompliance() []QuestionComplianceMetaDataInput { return v.Compliance }

// GetVariables returns CreateQuestionInput.Variables, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetVariables() []QuestionVariableInput { return v.Variables }

// CreateQuestionResponse is returned by CreateQuestion on success.
type CreateQuestionResponse struct {
	CreateQuestion CreateQuestionCreateQuestion `json:"createQuestion"`
}

// GetCreateQuestion returns CreateQuestionResponse.CreateQuestion, and is useful for accessing the field via an interface.
func (v *CreateQuestionResponse) GetCreateQuestion() CreateQuestionCreateQuestion {
	return v.CreateQuestion
}

// CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance struct {
	Id          string                `json:"id"`
	Version     int                   `json:"version"`
	SpecVersion int                   `json:"specVersion"`
	Operations  []RuleOperationOutput `json:"operations"`
}

// GetId returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.Id, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetId() string { return v.Id }

// GetVersion returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetOperations returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

type CreateReferencedQuestionRuleInstanceInput struct {
	QuestionId      string                   `json:"questionId"`
	QuestionName    string                   `json:"questionName"`
	Templates       map[string]interface{}   `json:"templates"`
	Tags            []string                 `json:"tags"`
	Name            string                   `json:"name"`
	Description     string                   `json:"description"`
	SpecVersion     int                      `json:"specVersion"`
	Operations      []RuleOperationInput     `json:"operations"`
	Outputs         []string                 `json:"outputs"`
	PollingInterval SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure bool                     `json:"notifyOnFailure"`
}

// GetQuestionId returns CreateReferencedQuestionRuleInstanceInput.QuestionId, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetQuestionId() string { return v.QuestionId }

// GetQuestionName returns CreateReferencedQuestionRuleInstanceInput.QuestionName, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetQuestionName() string { return v.QuestionName }

// GetTemplates returns CreateReferencedQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns CreateReferencedQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns CreateReferencedQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns CreateReferencedQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns CreateReferencedQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns CreateReferencedQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns CreateReferencedQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns CreateReferencedQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns CreateReferencedQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetNotifyOnFailure() bool {
	return v.NotifyOnFailure
}

// CreateReferencedQuestionRuleInstanceResponse is returned by CreateReferencedQuestionRuleInstance on success.
type CreateReferencedQuestionRuleInstanceResponse struct {
	CreateQuestionRuleInstance CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance `json:"createQuestionRuleInstance"`
}

// GetCreateQuestionRuleInstance returns CreateReferencedQuestionRuleInstanceResponse.CreateQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceResponse) GetCreateQuestionRuleInstance() CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance {
	return v.CreateQuestionRuleInstance
}

// DeleteQuestionDeleteQuestion includes the requested fields of the GraphQL type Question.
type DeleteQuestionDeleteQuestion struct {
	Id string `json:"id"`
}

// GetId returns DeleteQuestionDeleteQuestion.Id, and is useful for accessing the field via an interface.
func (v *DeleteQuestionDeleteQuestion) GetId() string { return v.Id }

// DeleteQuestionResponse is returned by DeleteQuestion on success.
type DeleteQuestionResponse struct {
	DeleteQuestion DeleteQuestionDeleteQuestion `json:"deleteQuestion"`
}

// GetDeleteQuestion returns DeleteQuestionResponse.DeleteQuestion, and is useful for accessing the field via an interface.
func (v *DeleteQuestionResponse) GetDeleteQuestion() DeleteQuestionDeleteQuestion {
	return v.DeleteQuestion
}

// DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult includes the requested fields of the GraphQL type DeleteRuleInstanceResult.
type DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult struct {
	Id string `json:"id"`
}

// GetId returns DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult.Id, and is useful for accessing the field via an interface.
func (v *DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult) GetId() string { return v.Id }

// DeleteRuleInstanceResponse is returned by DeleteRuleInstance on success.
type DeleteRuleInstanceResponse struct {
	DeleteRuleInstance DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult `json:"deleteRuleInstance"`
}

// GetDeleteRuleInstance returns DeleteRuleInstanceResponse.DeleteRuleInstance, and is useful for accessing the field via an interface.
func (v *DeleteRuleInstanceResponse) GetDeleteRuleInstance() DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult {
	return v.DeleteRuleInstance
}

// GetQuestionByIdQuestion includes the requested fields of the GraphQL type Question.
type GetQuestionByIdQuestion struct {
	Id              string                                                        `json:"id"`
	Title           string                                                        `json:"title"`
	Description     string                                                        `json:"description"`
	PollingInterval SchedulerPollingInterval                                      `json:"pollingInterval"`
	Queries         []GetQuestionByIdQuestionQueriesQuestionQuery                 `json:"queries"`
	Tags            []string                                                      `json:"tags"`
	Compliance      []GetQuestionByIdQuestionComplianceQuestionComplianceMetaData `json:"compliance"`
}

// GetId returns GetQuestionByIdQuestion.Id, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetId() string { return v.Id }

// GetTitle returns GetQuestionByIdQuestion.Title, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetTitle() string { return v.Title }

// GetDescription returns GetQuestionByIdQuestion.Description, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetDescription() string { return v.Description }

// GetPollingInterval returns GetQuestionByIdQuestion.PollingInterval, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetQueries returns GetQuestionByIdQuestion.Queries, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetQueries() []GetQuestionByIdQuestionQueriesQuestionQuery {
	return v.Queries
}

// GetTags returns GetQuestionByIdQuestion.Tags, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetTags() []string { return v.Tags }

// GetCompliance returns GetQuestionByIdQuestion.Compliance, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetCompliance() []GetQuestionByIdQuestionComplianceQuestionComplianceMetaData {
	return v.Compliance
}

// GetQuestionByIdQuestionComplianceQuestionComplianceMetaData includes the requested fields of the GraphQL type QuestionComplianceMetaData.
type GetQuestionByIdQuestionComplianceQuestionComplianceMetaData struct {
	Standard     string   `json:"standard"`
	Requirements []string `json:"requirements"`
	Controls     []string `json:"controls"`
}

// GetStandard returns GetQuestionByIdQuestionComplianceQuestionComplianceMetaData.Standard, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionComplianceQuestionComplianceMetaData) GetStandard() string {
	return v.Standard
}

// GetRequirements returns GetQuestionByIdQuestionComplianceQuestionComplianceMetaData.Requirements, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionComplianceQuestionComplianceMetaData) GetRequirements() []string {
	return v.Requirements
}

// GetControls returns GetQuestionByIdQuestionComplianceQuestionComplianceMetaData.Controls, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionComplianceQuestionComplianceMetaData) GetControls() []string {
	return v.Controls
}

// GetQuestionByIdQuestionQueriesQuestionQuery includes the requested fields of the GraphQL type QuestionQuery.
type GetQuestionByIdQuestionQueriesQuestionQuery struct {
	Name           string          `json:"name"`
	Query          string          `json:"query"`
	Version        string          `json:"version"`
	IncludeDeleted bool            `json:"includeDeleted"`
	ResultsAre     QueryResultsAre `json:"resultsAre"`
}

// GetName returns GetQuestionByIdQuestionQueriesQuestionQuery.Name, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionQueriesQuestionQuery) GetName() string { return v.Name }

// GetQuery returns GetQuestionByIdQuestionQueriesQuestionQuery.Query, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionQueriesQuestionQuery) GetQuery() string { return v.Query }

// GetVersion returns GetQuestionByIdQuestionQueriesQuestionQuery.Version, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionQueriesQuestionQuery) GetVersion() string { return v.Version }

// GetIncludeDeleted returns GetQuestionByIdQuestionQueriesQuestionQuery.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionQueriesQuestionQuery) GetIncludeDeleted() bool {
	return v.IncludeDeleted
}

// GetResultsAre returns GetQuestionByIdQuestionQueriesQuestionQuery.ResultsAre, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestionQueriesQuestionQuery) GetResultsAre() QueryResultsAre {
	return v.ResultsAre
}

// GetQuestionByIdResponse is returned by GetQuestionById on success.
type GetQuestionByIdResponse struct {
	Question GetQuestionByIdQuestion `json:"question"`
}

// GetQuestion returns GetQuestionByIdResponse.Question, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdResponse) GetQuestion() GetQuestionByIdQuestion { return v.Question }

// GetQuestionRuleInstanceQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type GetQuestionRuleInstanceQuestionRuleInstance struct {
	Id              string                                                                 `json:"id"`
	Name            string                                                                 `json:"name"`
	Description     string                                                                 `json:"description"`
	Version         int                                                                    `json:"version"`
	SpecVersion     int                                                                    `json:"specVersion"`
	Latest          bool                                                                   `json:"latest"`
	PollingInterval SchedulerPollingInterval                                               `json:"pollingInterval"`
	Deleted         bool                                                                   `json:"deleted"`
	Type            RuleInstanceType                                                       `json:"type"`
	Templates       map[string]interface{}                                                 `json:"templates"`
	NotifyOnFailure bool                                                                   `json:"notifyOnFailure"`
	QuestionId      string                                                                 `json:"questionId"`
	Question        GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails `json:"question"`
	Operations      []RuleOperationOutput                                                  `json:"operations"`
	Outputs         []string                                                               `json:"outputs"`
	Tags            []string                                                               `json:"tags"`
}

// GetId returns GetQuestionRuleInstanceQuestionRuleInstance.Id, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetId() string { return v.Id }

// GetName returns GetQuestionRuleInstanceQuestionRuleInstance.Name, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetName() string { return v.Name }

// GetDescription returns GetQuestionRuleInstanceQuestionRuleInstance.Description, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetDescription() string { return v.Description }

// GetVersion returns GetQuestionRuleInstanceQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetVersion() int { return v.Version }

// GetSpecVersion returns GetQuestionRuleInstanceQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetSpecVersion() int { return v.SpecVersion }

// GetLatest returns GetQuestionRuleInstanceQuestionRuleInstance.Latest, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetLatest() bool { return v.Latest }

// GetPollingInterval returns GetQuestionRuleInstanceQuestionRuleInstance.PollingInterval, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetDeleted returns GetQuestionRuleInstanceQuestionRuleInstance.Deleted, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetDeleted() bool { return v.Deleted }

// GetType returns GetQuestionRuleInstanceQuestionRuleInstance.Type, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetType() RuleInstanceType { return v.Type }

// GetTemplates returns GetQuestionRuleInstanceQuestionRuleInstance.Templates, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetNotifyOnFailure returns GetQuestionRuleInstanceQuestionRuleInstance.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetNotifyOnFailure() bool {
	return v.NotifyOnFailure
}

// GetQuestionId returns GetQuestionRuleInstanceQuestionRuleInstance.QuestionId, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetQuestionId() string { return v.QuestionId }

// GetQuestion returns GetQuestionRuleInstanceQuestionRuleInstance.Question, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetQuestion() GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails {
	return v.Question
}

// GetOperations returns GetQuestionRuleInstanceQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

// GetOutputs returns GetQuestionRuleInstanceQuestionRuleInstance.Outputs, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetOutputs() []string { return v.Outputs }

// GetTags returns GetQuestionRuleInstanceQuestionRuleInstance.Tags, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetTags() []string { return v.Tags }

// GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails includes the requested fields of the GraphQL type RuleQuestionDetails.
type GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails struct {
	Queries []GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query `json:"queries"`
}

// GetQueries returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails.Queries, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails) GetQueries() []GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query {
	return v.Queries
}

// GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query includes the requested fields of the GraphQL type J1Query.
type GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query struct {
	Name           string `json:"name"`
	Query          string `json:"query"`
	Version        string `json:"version"`
	IncludeDeleted bool   `json:"includeDeleted"`
}

// GetName returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Name, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetName() string {
	return v.Name
}

// GetQuery returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Query, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetQuery() string {
	return v.Query
}

// GetVersion returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Version, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetVersion() string {
	return v.Version
}

// GetIncludeDeleted returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetIncludeDeleted() bool {
	return v.IncludeDeleted
}

// GetQuestionRuleInstanceResponse is returned by GetQuestionRuleInstance on success.
type GetQuestionRuleInstanceResponse struct {
	QuestionRuleInstance GetQuestionRuleInstanceQuestionRuleInstance `json:"questionRuleInstance"`
}

// GetQuestionRuleInstance returns GetQuestionRuleInstanceResponse.QuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceResponse) GetQuestionRuleInstance() GetQuestionRuleInstanceQuestionRuleInstance {
	return v.QuestionRuleInstance
}

type J1QueryInput struct {
	Query          string `json:"query"`
	Name           string `json:"name"`
	Version        string `json:"version"`
	IncludeDeleted bool   `json:"includeDeleted"`
}

// GetQuery returns J1QueryInput.Query, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetQuery() string { return v.Query }

// GetName returns J1QueryInput.Name, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetName() string { return v.Name }

// GetVersion returns J1QueryInput.Version, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetVersion() string { return v.Version }

// GetIncludeDeleted returns J1QueryInput.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetIncludeDeleted() bool { return v.IncludeDeleted }

type QueryResultsAre string

const (
	QueryResultsAreBad         QueryResultsAre = "BAD"
	QueryResultsAreGood        QueryResultsAre = "GOOD"
	QueryResultsAreInformative QueryResultsAre = "INFORMATIVE"
	QueryResultsAreUnknown     QueryResultsAre = "UNKNOWN"
)

type QuestionComplianceMetaDataInput struct {
	Standard     string   `json:"standard"`
	Requirements []string `json:"requirements"`
	Controls     []string `json:"controls"`
}

// GetStandard returns QuestionComplianceMetaDataInput.Standard, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaDataInput) GetStandard() string { return v.Standard }

// GetRequirements returns QuestionComplianceMetaDataInput.Requirements, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaDataInput) GetRequirements() []string { return v.Requirements }

// GetControls returns QuestionComplianceMetaDataInput.Controls, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaDataInput) GetControls() []string { return v.Controls }

type QuestionQueryInput struct {
	Query          string          `json:"query"`
	Version        string          `json:"version"`
	Name           string          `json:"name"`
	ResultsAre     QueryResultsAre `json:"resultsAre"`
	IncludeDeleted bool            `json:"includeDeleted"`
}

// GetQuery returns QuestionQueryInput.Query, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetQuery() string { return v.Query }

// GetVersion returns QuestionQueryInput.Version, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetVersion() string { return v.Version }

// GetName returns QuestionQueryInput.Name, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetName() string { return v.Name }

// GetResultsAre returns QuestionQueryInput.ResultsAre, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetResultsAre() QueryResultsAre { return v.ResultsAre }

// GetIncludeDeleted returns QuestionQueryInput.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetIncludeDeleted() bool { return v.IncludeDeleted }

type QuestionUpdate struct {
	Title           string                            `json:"title"`
	Queries         []QuestionQueryInput              `json:"queries"`
	Compliance      []QuestionComplianceMetaDataInput `json:"compliance"`
	Tags            []string                          `json:"tags"`
	Description     string                            `json:"description"`
	ShowTrend       bool                              `json:"showTrend"`
	PollingInterval SchedulerPollingInterval          `json:"pollingInterval"`
}

// GetTitle returns QuestionUpdate.Title, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetTitle() string { return v.Title }

// GetQueries returns QuestionUpdate.Queries, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetQueries() []QuestionQueryInput { return v.Queries }

// GetCompliance returns QuestionUpdate.Compliance, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetCompliance() []QuestionComplianceMetaDataInput { return v.Compliance }

// GetTags returns QuestionUpdate.Tags, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetTags() []string { return v.Tags }

// GetDescription returns QuestionUpdate.Description, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetDescription() string { return v.Description }

// GetShowTrend returns QuestionUpdate.ShowTrend, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetShowTrend() bool { return v.ShowTrend }

// GetPollingInterval returns QuestionUpdate.PollingInterval, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetPollingInterval() SchedulerPollingInterval { return v.PollingInterval }

type QuestionVariableInput struct {
	Name     string `json:"name"`
	Required bool   `json:"required"`
	Default  string `json:"default"`
}

// GetName returns QuestionVariableInput.Name, and is useful for accessing the field via an interface.
func (v *QuestionVariableInput) GetName() string { return v.Name }

// GetRequired returns QuestionVariableInput.Required, and is useful for accessing the field via an interface.
func (v *QuestionVariableInput) GetRequired() bool { return v.Required }

// GetDefault returns QuestionVariableInput.Default, and is useful for accessing the field via an interface.
func (v *QuestionVariableInput) GetDefault() string { return v.Default }

type RuleInstanceType string

const (
	RuleInstanceTypeQuestion RuleInstanceType = "QUESTION"
	RuleInstanceTypeReport   RuleInstanceType = "REPORT"
)

type RuleOperationInput struct {
	When    map[string]interface{}   `json:"when,omitempty"`
	Actions []map[string]interface{} `json:"actions"`
}

// GetWhen returns RuleOperationInput.When, and is useful for accessing the field via an interface.
func (v *RuleOperationInput) GetWhen() map[string]interface{} { return v.When }

// GetActions returns RuleOperationInput.Actions, and is useful for accessing the field via an interface.
func (v *RuleOperationInput) GetActions() []map[string]interface{} { return v.Actions }

// RuleOperationOutput includes the requested fields of the GraphQL type RuleOperation.
type RuleOperationOutput struct {
	When    map[string]interface{}   `json:"when"`
	Actions []map[string]interface{} `json:"actions"`
}

// GetWhen returns RuleOperationOutput.When, and is useful for accessing the field via an interface.
func (v *RuleOperationOutput) GetWhen() map[string]interface{} { return v.When }

// GetActions returns RuleOperationOutput.Actions, and is useful for accessing the field via an interface.
func (v *RuleOperationOutput) GetActions() []map[string]interface{} { return v.Actions }

type RuleQuestionDetailsInput struct {
	Queries []J1QueryInput `json:"queries"`
}

// GetQueries returns RuleQuestionDetailsInput.Queries, and is useful for accessing the field via an interface.
func (v *RuleQuestionDetailsInput) GetQueries() []J1QueryInput { return v.Queries }

type RuleStateInput struct {
	Actions map[string]interface{} `json:"actions"`
}

// GetActions returns RuleStateInput.Actions, and is useful for accessing the field via an interface.
func (v *RuleStateInput) GetActions() map[string]interface{} { return v.Actions }

type SchedulerPollingInterval string

const (
	SchedulerPollingIntervalDisabled      SchedulerPollingInterval = "DISABLED"
	SchedulerPollingIntervalThirtyMinutes SchedulerPollingInterval = "THIRTY_MINUTES"
	SchedulerPollingIntervalOneHour       SchedulerPollingInterval = "ONE_HOUR"
	SchedulerPollingIntervalFourHours     SchedulerPollingInterval = "FOUR_HOURS"
	SchedulerPollingIntervalEightHours    SchedulerPollingInterval = "EIGHT_HOURS"
	SchedulerPollingIntervalTwelveHours   SchedulerPollingInterval = "TWELVE_HOURS"
	SchedulerPollingIntervalOneDay        SchedulerPollingInterval = "ONE_DAY"
	SchedulerPollingIntervalOneWeek       SchedulerPollingInterval = "ONE_WEEK"
)

type UpdateInlineQuestionRuleInstanceInput struct {
	Question        RuleQuestionDetailsInput `json:"question"`
	Id              string                   `json:"id"`
	Version         int                      `json:"version"`
	State           RuleStateInput           `json:"state,omitempty"`
	LatestAlertId   string                   `json:"latestAlertId,omitempty"`
	Templates       map[string]interface{}   `json:"templates"`
	Tags            []string                 `json:"tags"`
	Name            string                   `json:"name"`
	Description     string                   `json:"description"`
	SpecVersion     int                      `json:"specVersion"`
	Operations      []RuleOperationInput     `json:"operations"`
	Outputs         []string                 `json:"outputs,omitempty"`
	PollingInterval SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure bool                     `json:"notifyOnFailure"`
}

// GetQuestion returns UpdateInlineQuestionRuleInstanceInput.Question, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetQuestion() RuleQuestionDetailsInput {
	return v.Question
}

// GetId returns UpdateInlineQuestionRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetId() string { return v.Id }

// GetVersion returns UpdateInlineQuestionRuleInstanceInput.Version, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetVersion() int { return v.Version }

// GetState returns UpdateInlineQuestionRuleInstanceInput.State, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetState() RuleStateInput { return v.State }

// GetLatestAlertId returns UpdateInlineQuestionRuleInstanceInput.LatestAlertId, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetLatestAlertId() string { return v.LatestAlertId }

// GetTemplates returns UpdateInlineQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns UpdateInlineQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns UpdateInlineQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns UpdateInlineQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns UpdateInlineQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns UpdateInlineQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns UpdateInlineQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns UpdateInlineQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns UpdateInlineQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetNotifyOnFailure() bool { return v.NotifyOnFailure }

// UpdateInlineQuestionRuleInstanceResponse is returned by UpdateInlineQuestionRuleInstance on success.
type UpdateInlineQuestionRuleInstanceResponse struct {
	UpdateInlineQuestionRuleInstance UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance `json:"updateInlineQuestionRuleInstance"`
}

// GetUpdateInlineQuestionRuleInstance returns UpdateInlineQuestionRuleInstanceResponse.UpdateInlineQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceResponse) GetUpdateInlineQuestionRuleInstance() UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance {
	return v.UpdateInlineQuestionRuleInstance
}

// UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance struct {
	Version     int                   `json:"version"`
	SpecVersion int                   `json:"specVersion"`
	Operations  []RuleOperationOutput `json:"operations"`
}

// GetVersion returns UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetOperations returns UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

// UpdateQuestionResponse is returned by UpdateQuestion on success.
type UpdateQuestionResponse struct {
	UpdateQuestion UpdateQuestionUpdateQuestion `json:"updateQuestion"`
}

// GetUpdateQuestion returns UpdateQuestionResponse.UpdateQuestion, and is useful for accessing the field via an interface.
func (v *UpdateQuestionResponse) GetUpdateQuestion() UpdateQuestionUpdateQuestion {
	return v.UpdateQuestion
}

// UpdateQuestionUpdateQuestion includes the requested fields of the GraphQL type Question.
type UpdateQuestionUpdateQuestion struct {
	PollingInterval SchedulerPollingInterval                           `json:"pollingInterval"`
	Queries         []UpdateQuestionUpdateQuestionQueriesQuestionQuery `json:"queries"`
}

// GetPollingInterval returns UpdateQuestionUpdateQuestion.PollingInterval, and is useful for accessing the field via an interface.
func (v *UpdateQuestionUpdateQuestion) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetQueries returns UpdateQuestionUpdateQuestion.Queries, and is useful for accessing the field via an interface.
func (v *UpdateQuestionUpdateQuestion) GetQueries() []UpdateQuestionUpdateQuestionQueriesQuestionQuery {
	return v.Queries
}

// UpdateQuestionUpdateQuestionQueriesQuestionQuery includes the requested fields of the GraphQL type QuestionQuery.
type UpdateQuestionUpdateQuestionQueriesQuestionQuery struct {
	Name           string          `json:"name"`
	Version        string          `json:"version"`
	IncludeDeleted bool            `json:"includeDeleted"`
	ResultsAre     QueryResultsAre `json:"resultsAre"`
}

// GetName returns UpdateQuestionUpdateQuestionQueriesQuestionQuery.Name, and is useful for accessing the field via an interface.
func (v *UpdateQuestionUpdateQuestionQueriesQuestionQuery) GetName() string { return v.Name }

// GetVersion returns UpdateQuestionUpdateQuestionQueriesQuestionQuery.Version, and is useful for accessing the field via an interface.
func (v *UpdateQuestionUpdateQuestionQueriesQuestionQuery) GetVersion() string { return v.Version }

// GetIncludeDeleted returns UpdateQuestionUpdateQuestionQueriesQuestionQuery.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *UpdateQuestionUpdateQuestionQueriesQuestionQuery) GetIncludeDeleted() bool {
	return v.IncludeDeleted
}

// GetResultsAre returns UpdateQuestionUpdateQuestionQueriesQuestionQuery.ResultsAre, and is useful for accessing the field via an interface.
func (v *UpdateQuestionUpdateQuestionQueriesQuestionQuery) GetResultsAre() QueryResultsAre {
	return v.ResultsAre
}

type UpdateReferencedQuestionRuleInstanceInput struct {
	QuestionId      string                   `json:"questionId"`
	QuestionName    string                   `json:"questionName,omitempty"`
	Id              string                   `json:"id"`
	Version         int                      `json:"version"`
	State           RuleStateInput           `json:"state,omitempty"`
	LatestAlertId   string                   `json:"latestAlertId,omitempty"`
	Templates       map[string]interface{}   `json:"templates"`
	Tags            []string                 `json:"tags"`
	Name            string                   `json:"name"`
	Description     string                   `json:"description"`
	SpecVersion     int                      `json:"specVersion"`
	Operations      []RuleOperationInput     `json:"operations"`
	Outputs         []string                 `json:"outputs,omitempty"`
	PollingInterval SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure bool                     `json:"notifyOnFailure"`
}

// GetQuestionId returns UpdateReferencedQuestionRuleInstanceInput.QuestionId, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetQuestionId() string { return v.QuestionId }

// GetQuestionName returns UpdateReferencedQuestionRuleInstanceInput.QuestionName, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetQuestionName() string { return v.QuestionName }

// GetId returns UpdateReferencedQuestionRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetId() string { return v.Id }

// GetVersion returns UpdateReferencedQuestionRuleInstanceInput.Version, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetVersion() int { return v.Version }

// GetState returns UpdateReferencedQuestionRuleInstanceInput.State, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetState() RuleStateInput { return v.State }

// GetLatestAlertId returns UpdateReferencedQuestionRuleInstanceInput.LatestAlertId, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetLatestAlertId() string { return v.LatestAlertId }

// GetTemplates returns UpdateReferencedQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns UpdateReferencedQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns UpdateReferencedQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns UpdateReferencedQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns UpdateReferencedQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns UpdateReferencedQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns UpdateReferencedQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns UpdateReferencedQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns UpdateReferencedQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetNotifyOnFailure() bool {
	return v.NotifyOnFailure
}

// UpdateReferencedQuestionRuleInstanceResponse is returned by UpdateReferencedQuestionRuleInstance on success.
type UpdateReferencedQuestionRuleInstanceResponse struct {
	UpdateReferencedQuestionRuleInstance UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance `json:"updateReferencedQuestionRuleInstance"`
}

// GetUpdateReferencedQuestionRuleInstance returns UpdateReferencedQuestionRuleInstanceResponse.UpdateReferencedQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceResponse) GetUpdateReferencedQuestionRuleInstance() UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance {
	return v.UpdateReferencedQuestionRuleInstance
}

// UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance struct {
	Version     int                   `json:"version"`
	SpecVersion int                   `json:"specVersion"`
	Operations  []RuleOperationOutput `json:"operations"`
}

// GetVersion returns UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetOperations returns UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

// __CreateInlineQuestionRuleInstanceInput is used internally by genqlient
type __CreateInlineQuestionRuleInstanceInput struct {
	Instance CreateInlineQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __CreateInlineQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__CreateInlineQuestionRuleInstanceInput) GetInstance() CreateInlineQuestionRuleInstanceInput {
	return v.Instance
}

// __CreateQuestionInput is used internally by genqlient
type __CreateQuestionInput struct {
	Question CreateQuestionInput `json:"question"`
}

// GetQuestion returns __CreateQuestionInput.Question, and is useful for accessing the field via an interface.
func (v *__CreateQuestionInput) GetQuestion() CreateQuestionInput { return v.Question }

// __CreateReferencedQuestionRuleInstanceInput is used internally by genqlient
type __CreateReferencedQuestionRuleInstanceInput struct {
	Instance CreateReferencedQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __CreateReferencedQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__CreateReferencedQuestionRuleInstanceInput) GetInstance() CreateReferencedQuestionRuleInstanceInput {
	return v.Instance
}

// __DeleteQuestionInput is used internally by genqlient
type __DeleteQuestionInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteQuestionInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteQuestionInput) GetId() string { return v.Id }

// __DeleteRuleInstanceInput is used internally by genqlient
type __DeleteRuleInstanceInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteRuleInstanceInput) GetId() string { return v.Id }

// __GetQuestionByIdInput is used internally by genqlient
type __GetQuestionByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetQuestionByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetQuestionByIdInput) GetId() string { return v.Id }

// __GetQuestionRuleInstanceInput is used internally by genqlient
type __GetQuestionRuleInstanceInput struct {
	Id string `json:"id"`
}

// GetId returns __GetQuestionRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *__GetQuestionRuleInstanceInput) GetId() string { return v.Id }

// __UpdateInlineQuestionRuleInstanceInput is used internally by genqlient
type __UpdateInlineQuestionRuleInstanceInput struct {
	Instance UpdateInlineQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __UpdateInlineQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__UpdateInlineQuestionRuleInstanceInput) GetInstance() UpdateInlineQuestionRuleInstanceInput {
	return v.Instance
}

// __UpdateQuestionInput is used internally by genqlient
type __UpdateQuestionInput struct {
	Id     string         `json:"id"`
	Update QuestionUpdate `json:"update"`
}

// GetId returns __UpdateQuestionInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateQuestionInput) GetId() string { return v.Id }

// GetUpdate returns __UpdateQuestionInput.Update, and is useful for accessing the field via an interface.
func (v *__UpdateQuestionInput) GetUpdate() QuestionUpdate { return v.Update }

// __UpdateReferencedQuestionRuleInstanceInput is used internally by genqlient
type __UpdateReferencedQuestionRuleInstanceInput struct {
	Instance UpdateReferencedQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __UpdateReferencedQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__UpdateReferencedQuestionRuleInstanceInput) GetInstance() UpdateReferencedQuestionRuleInstanceInput {
	return v.Instance
}

func CreateInlineQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance CreateInlineQuestionRuleInstanceInput,
) (*CreateInlineQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "CreateInlineQuestionRuleInstance",
		Query: `
mutation CreateInlineQuestionRuleInstance ($instance: CreateInlineQuestionRuleInstanceInput!) {
	createQuestionRuleInstance: createInlineQuestionRuleInstance(instance: $instance) {
		id
		version
		specVersion
		question {
			queries {
				name
				query
				version
				includeDeleted
			}
		}
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__CreateInlineQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data CreateInlineQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateQuestion(
	ctx context.Context,
	client graphql.Client,
	question CreateQuestionInput,
) (*CreateQuestionResponse, error) {
	req := &graphql.Request{
		OpName: "CreateQuestion",
		Query: `
mutation CreateQuestion ($question: CreateQuestionInput!) {
	createQuestion(question: $question) {
		id
		title
		description
		pollingInterval
		queries {
			name
			query
			version
			includeDeleted
			resultsAre
		}
		tags
		compliance {
			standard
			requirements
			controls
		}
	}
}
`,
		Variables: &__CreateQuestionInput{
			Question: question,
		},
	}
	var err error

	var data CreateQuestionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateReferencedQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance CreateReferencedQuestionRuleInstanceInput,
) (*CreateReferencedQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "CreateReferencedQuestionRuleInstance",
		Query: `
mutation CreateReferencedQuestionRuleInstance ($instance: CreateReferencedQuestionRuleInstanceInput!) {
	createQuestionRuleInstance: createReferencedQuestionRuleInstance(instance: $instance) {
		id
		version
		specVersion
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__CreateReferencedQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data CreateReferencedQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteQuestion(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteQuestionResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteQuestion",
		Query: `
mutation DeleteQuestion ($id: ID!) {
	deleteQuestion(id: $id) {
		id
	}
}
`,
		Variables: &__DeleteQuestionInput{
			Id: id,
		},
	}
	var err error

	var data DeleteQuestionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteRuleInstance(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteRuleInstance",
		Query: `
mutation DeleteRuleInstance ($id: ID!) {
	deleteRuleInstance(id: $id) {
		id
	}
}
`,
		Variables: &__DeleteRuleInstanceInput{
			Id: id,
		},
	}
	var err error

	var data DeleteRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetQuestionById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetQuestionByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetQuestionById",
		Query: `
query GetQuestionById ($id: ID!) {
	question(id: $id) {
		id
		title
		description
		pollingInterval
		queries {
			name
			query
			version
			includeDeleted
			resultsAre
		}
		tags
		compliance {
			standard
			requirements
			controls
		}
	}
}
`,
		Variables: &__GetQuestionByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetQuestionByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "GetQuestionRuleInstance",
		Query: `
query GetQuestionRuleInstance ($id: ID!) {
	questionRuleInstance(id: $id) {
		id
		name
		description
		version
		specVersion
		latest
		pollingInterval
		deleted
		type
		templates
		notifyOnFailure
		questionId
		question {
			queries {
				name
				query
				version
				includeDeleted
			}
		}
		operations {
			when
			actions
		}
		outputs
		tags
	}
}
`,
		Variables: &__GetQuestionRuleInstanceInput{
			Id: id,
		},
	}
	var err error

	var data GetQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateInlineQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance UpdateInlineQuestionRuleInstanceInput,
) (*UpdateInlineQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateInlineQuestionRuleInstance",
		Query: `
mutation UpdateInlineQuestionRuleInstance ($instance: UpdateInlineQuestionRuleInstanceInput!) {
	updateInlineQuestionRuleInstance(instance: $instance) {
		version
		specVersion
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__UpdateInlineQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data UpdateInlineQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateQuestion(
	ctx context.Context,
	client graphql.Client,
	id string,
	update QuestionUpdate,
) (*UpdateQuestionResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateQuestion",
		Query: `
mutation UpdateQuestion ($id: ID!, $update: QuestionUpdate!) {
	updateQuestion(id: $id, update: $update) {
		pollingInterval
		queries {
			name
			version
			includeDeleted
			resultsAre
		}
	}
}
`,
		Variables: &__UpdateQuestionInput{
			Id:     id,
			Update: update,
		},
	}
	var err error

	var data UpdateQuestionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateReferencedQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance UpdateReferencedQuestionRuleInstanceInput,
) (*UpdateReferencedQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateReferencedQuestionRuleInstance",
		Query: `
mutation UpdateReferencedQuestionRuleInstance ($instance: UpdateReferencedQuestionRuleInstanceInput!) {
	updateReferencedQuestionRuleInstance(instance: $instance) {
		version
		specVersion
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__UpdateReferencedQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data UpdateReferencedQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
