// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

type ComplianceFrameworkItemAuditStatus string

const (
	ComplianceFrameworkItemAuditStatusAccepted       ComplianceFrameworkItemAuditStatus = "ACCEPTED"
	ComplianceFrameworkItemAuditStatusActionRequired ComplianceFrameworkItemAuditStatus = "ACTION_REQUIRED"
	ComplianceFrameworkItemAuditStatusInProgress     ComplianceFrameworkItemAuditStatus = "IN_PROGRESS"
	ComplianceFrameworkItemAuditStatusOpen           ComplianceFrameworkItemAuditStatus = "OPEN"
	ComplianceFrameworkItemAuditStatusReady          ComplianceFrameworkItemAuditStatus = "READY"
	ComplianceFrameworkItemAuditStatusUnderReview    ComplianceFrameworkItemAuditStatus = "UNDER_REVIEW"
)

type ComplianceFrameworkType string

const (
	ComplianceFrameworkTypeBenchmark     ComplianceFrameworkType = "BENCHMARK"
	ComplianceFrameworkTypeQuestionnaire ComplianceFrameworkType = "QUESTIONNAIRE"
	ComplianceFrameworkTypeStandard      ComplianceFrameworkType = "STANDARD"
)

// ComplianceGroup includes the requested fields of the GraphQL type ComplianceGroup.
type ComplianceGroup struct {
	Id              string `json:"id"`
	FrameworkId     string `json:"frameworkId"`
	Name            string `json:"name"`
	Description     string `json:"description"`
	DisplayCategory string `json:"displayCategory"`
	WebLink         string `json:"webLink"`
}

// GetId returns ComplianceGroup.Id, and is useful for accessing the field via an interface.
func (v *ComplianceGroup) GetId() string { return v.Id }

// GetFrameworkId returns ComplianceGroup.FrameworkId, and is useful for accessing the field via an interface.
func (v *ComplianceGroup) GetFrameworkId() string { return v.FrameworkId }

// GetName returns ComplianceGroup.Name, and is useful for accessing the field via an interface.
func (v *ComplianceGroup) GetName() string { return v.Name }

// GetDescription returns ComplianceGroup.Description, and is useful for accessing the field via an interface.
func (v *ComplianceGroup) GetDescription() string { return v.Description }

// GetDisplayCategory returns ComplianceGroup.DisplayCategory, and is useful for accessing the field via an interface.
func (v *ComplianceGroup) GetDisplayCategory() string { return v.DisplayCategory }

// GetWebLink returns ComplianceGroup.WebLink, and is useful for accessing the field via an interface.
func (v *ComplianceGroup) GetWebLink() string { return v.WebLink }

// CreateComplianceFrameworkCreateComplianceFramework includes the requested fields of the GraphQL type ComplianceFramework.
type CreateComplianceFrameworkCreateComplianceFramework struct {
	Id string `json:"id"`
}

// GetId returns CreateComplianceFrameworkCreateComplianceFramework.Id, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkCreateComplianceFramework) GetId() string { return v.Id }

type CreateComplianceFrameworkInput struct {
	Name          string                   `json:"name"`
	Version       string                   `json:"version"`
	FrameworkType ComplianceFrameworkType  `json:"frameworkType"`
	WebLink       string                   `json:"webLink"`
	ScopeFilters  []map[string]interface{} `json:"scopeFilters"`
}

// GetName returns CreateComplianceFrameworkInput.Name, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkInput) GetName() string { return v.Name }

// GetVersion returns CreateComplianceFrameworkInput.Version, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkInput) GetVersion() string { return v.Version }

// GetFrameworkType returns CreateComplianceFrameworkInput.FrameworkType, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkInput) GetFrameworkType() ComplianceFrameworkType {
	return v.FrameworkType
}

// GetWebLink returns CreateComplianceFrameworkInput.WebLink, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkInput) GetWebLink() string { return v.WebLink }

// GetScopeFilters returns CreateComplianceFrameworkInput.ScopeFilters, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkInput) GetScopeFilters() []map[string]interface{} {
	return v.ScopeFilters
}

// CreateComplianceFrameworkItemCreateComplianceFrameworkItem includes the requested fields of the GraphQL type ComplianceFrameworkItem.
type CreateComplianceFrameworkItemCreateComplianceFrameworkItem struct {
	Id string `json:"id"`
}

// GetId returns CreateComplianceFrameworkItemCreateComplianceFrameworkItem.Id, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemCreateComplianceFrameworkItem) GetId() string { return v.Id }

type CreateComplianceFrameworkItemInput struct {
	Name            string `json:"name"`
	Description     string `json:"description"`
	DisplayCategory string `json:"displayCategory"`
	Ref             string `json:"ref"`
	FrameworkId     string `json:"frameworkId"`
	GroupId         string `json:"groupId"`
	WebLink         string `json:"webLink"`
}

// GetName returns CreateComplianceFrameworkItemInput.Name, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemInput) GetName() string { return v.Name }

// GetDescription returns CreateComplianceFrameworkItemInput.Description, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemInput) GetDescription() string { return v.Description }

// GetDisplayCategory returns CreateComplianceFrameworkItemInput.DisplayCategory, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemInput) GetDisplayCategory() string { return v.DisplayCategory }

// GetRef returns CreateComplianceFrameworkItemInput.Ref, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemInput) GetRef() string { return v.Ref }

// GetFrameworkId returns CreateComplianceFrameworkItemInput.FrameworkId, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemInput) GetFrameworkId() string { return v.FrameworkId }

// GetGroupId returns CreateComplianceFrameworkItemInput.GroupId, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemInput) GetGroupId() string { return v.GroupId }

// GetWebLink returns CreateComplianceFrameworkItemInput.WebLink, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemInput) GetWebLink() string { return v.WebLink }

// CreateComplianceFrameworkItemResponse is returned by CreateComplianceFrameworkItem on success.
type CreateComplianceFrameworkItemResponse struct {
	CreateComplianceFrameworkItem CreateComplianceFrameworkItemCreateComplianceFrameworkItem `json:"createComplianceFrameworkItem"`
}

// GetCreateComplianceFrameworkItem returns CreateComplianceFrameworkItemResponse.CreateComplianceFrameworkItem, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkItemResponse) GetCreateComplianceFrameworkItem() CreateComplianceFrameworkItemCreateComplianceFrameworkItem {
	return v.CreateComplianceFrameworkItem
}

// CreateComplianceFrameworkResponse is returned by CreateComplianceFramework on success.
type CreateComplianceFrameworkResponse struct {
	CreateComplianceFramework CreateComplianceFrameworkCreateComplianceFramework `json:"createComplianceFramework"`
}

// GetCreateComplianceFramework returns CreateComplianceFrameworkResponse.CreateComplianceFramework, and is useful for accessing the field via an interface.
func (v *CreateComplianceFrameworkResponse) GetCreateComplianceFramework() CreateComplianceFrameworkCreateComplianceFramework {
	return v.CreateComplianceFramework
}

// CreateComplianceGroupCreateComplianceGroup includes the requested fields of the GraphQL type ComplianceGroup.
type CreateComplianceGroupCreateComplianceGroup struct {
	Id string `json:"id"`
}

// GetId returns CreateComplianceGroupCreateComplianceGroup.Id, and is useful for accessing the field via an interface.
func (v *CreateComplianceGroupCreateComplianceGroup) GetId() string { return v.Id }

type CreateComplianceGroupInput struct {
	Name            string `json:"name"`
	Description     string `json:"description"`
	DisplayCategory string `json:"displayCategory"`
	FrameworkId     string `json:"frameworkId"`
	WebLink         string `json:"webLink"`
}

// GetName returns CreateComplianceGroupInput.Name, and is useful for accessing the field via an interface.
func (v *CreateComplianceGroupInput) GetName() string { return v.Name }

// GetDescription returns CreateComplianceGroupInput.Description, and is useful for accessing the field via an interface.
func (v *CreateComplianceGroupInput) GetDescription() string { return v.Description }

// GetDisplayCategory returns CreateComplianceGroupInput.DisplayCategory, and is useful for accessing the field via an interface.
func (v *CreateComplianceGroupInput) GetDisplayCategory() string { return v.DisplayCategory }

// GetFrameworkId returns CreateComplianceGroupInput.FrameworkId, and is useful for accessing the field via an interface.
func (v *CreateComplianceGroupInput) GetFrameworkId() string { return v.FrameworkId }

// GetWebLink returns CreateComplianceGroupInput.WebLink, and is useful for accessing the field via an interface.
func (v *CreateComplianceGroupInput) GetWebLink() string { return v.WebLink }

// CreateComplianceGroupResponse is returned by CreateComplianceGroup on success.
type CreateComplianceGroupResponse struct {
	CreateComplianceGroup CreateComplianceGroupCreateComplianceGroup `json:"createComplianceGroup"`
}

// GetCreateComplianceGroup returns CreateComplianceGroupResponse.CreateComplianceGroup, and is useful for accessing the field via an interface.
func (v *CreateComplianceGroupResponse) GetCreateComplianceGroup() CreateComplianceGroupCreateComplianceGroup {
	return v.CreateComplianceGroup
}

// CreateComplianceLibraryItemCreateComplianceLibraryItem includes the requested fields of the GraphQL type ComplianceLibraryItem.
type CreateComplianceLibraryItemCreateComplianceLibraryItem struct {
	Id string `json:"id"`
}

// GetId returns CreateComplianceLibraryItemCreateComplianceLibraryItem.Id, and is useful for accessing the field via an interface.
func (v *CreateComplianceLibraryItemCreateComplianceLibraryItem) GetId() string { return v.Id }

type CreateComplianceLibraryItemInput struct {
	Name            string `json:"name"`
	Description     string `json:"description"`
	DisplayCategory string `json:"displayCategory"`
	Ref             string `json:"ref"`
	WebLink         string `json:"webLink"`
}

// GetName returns CreateComplianceLibraryItemInput.Name, and is useful for accessing the field via an interface.
func (v *CreateComplianceLibraryItemInput) GetName() string { return v.Name }

// GetDescription returns CreateComplianceLibraryItemInput.Description, and is useful for accessing the field via an interface.
func (v *CreateComplianceLibraryItemInput) GetDescription() string { return v.Description }

// GetDisplayCategory returns CreateComplianceLibraryItemInput.DisplayCategory, and is useful for accessing the field via an interface.
func (v *CreateComplianceLibraryItemInput) GetDisplayCategory() string { return v.DisplayCategory }

// GetRef returns CreateComplianceLibraryItemInput.Ref, and is useful for accessing the field via an interface.
func (v *CreateComplianceLibraryItemInput) GetRef() string { return v.Ref }

// GetWebLink returns CreateComplianceLibraryItemInput.WebLink, and is useful for accessing the field via an interface.
func (v *CreateComplianceLibraryItemInput) GetWebLink() string { return v.WebLink }

// CreateComplianceLibraryItemResponse is returned by CreateComplianceLibraryItem on success.
type CreateComplianceLibraryItemResponse struct {
	CreateComplianceLibraryItem CreateComplianceLibraryItemCreateComplianceLibraryItem `json:"createComplianceLibraryItem"`
}

// GetCreateComplianceLibraryItem returns CreateComplianceLibraryItemResponse.CreateComplianceLibraryItem, and is useful for accessing the field via an interface.
func (v *CreateComplianceLibraryItemResponse) GetCreateComplianceLibraryItem() CreateComplianceLibraryItemCreateComplianceLibraryItem {
	return v.CreateComplianceLibraryItem
}

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance struct {
	Id          string                                                                                `json:"id"`
	Version     int                                                                                   `json:"version"`
	SpecVersion int                                                                                   `json:"specVersion"`
	Question    CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails `json:"question"`
	Operations  []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation   `json:"operations"`
}

// GetId returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Id, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetId() string { return v.Id }

// GetVersion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetQuestion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Question, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetQuestion() CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails {
	return v.Question
}

// GetOperations returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance) GetOperations() []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation {
	return v.Operations
}

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation includes the requested fields of the GraphQL type RuleOperation.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation struct {
	When    map[string]interface{}   `json:"when"`
	Actions []map[string]interface{} `json:"actions"`
}

// GetWhen returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation.When, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation) GetWhen() map[string]interface{} {
	return v.When
}

// GetActions returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation.Actions, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceOperationsRuleOperation) GetActions() []map[string]interface{} {
	return v.Actions
}

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails includes the requested fields of the GraphQL type RuleQuestionDetails.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails struct {
	Queries []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query `json:"queries"`
}

// GetQueries returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails.Queries, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetails) GetQueries() []CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query {
	return v.Queries
}

// CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query includes the requested fields of the GraphQL type J1Query.
type CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query struct {
	Name           string `json:"name"`
	Query          string `json:"query"`
	Version        string `json:"version"`
	IncludeDeleted bool   `json:"includeDeleted"`
}

// GetName returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Name, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetName() string {
	return v.Name
}

// GetQuery returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Query, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetQuery() string {
	return v.Query
}

// GetVersion returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Version, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetVersion() string {
	return v.Version
}

// GetIncludeDeleted returns CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceCreateQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetIncludeDeleted() bool {
	return v.IncludeDeleted
}

type CreateInlineQuestionRuleInstanceInput struct {
	Question                        RuleQuestionDetailsInput `json:"question"`
	Templates                       map[string]interface{}   `json:"templates"`
	Tags                            []string                 `json:"tags"`
	Name                            string                   `json:"name"`
	Description                     string                   `json:"description"`
	SpecVersion                     int                      `json:"specVersion"`
	Operations                      []RuleOperationInput     `json:"operations"`
	Outputs                         []string                 `json:"outputs"`
	PollingInterval                 SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure                 bool                     `json:"notifyOnFailure"`
	TriggerActionsOnNewEntitiesOnly bool                     `json:"triggerActionsOnNewEntitiesOnly"`
}

// GetQuestion returns CreateInlineQuestionRuleInstanceInput.Question, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetQuestion() RuleQuestionDetailsInput {
	return v.Question
}

// GetTemplates returns CreateInlineQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns CreateInlineQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns CreateInlineQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns CreateInlineQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns CreateInlineQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns CreateInlineQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns CreateInlineQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns CreateInlineQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns CreateInlineQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetNotifyOnFailure() bool { return v.NotifyOnFailure }

// GetTriggerActionsOnNewEntitiesOnly returns CreateInlineQuestionRuleInstanceInput.TriggerActionsOnNewEntitiesOnly, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceInput) GetTriggerActionsOnNewEntitiesOnly() bool {
	return v.TriggerActionsOnNewEntitiesOnly
}

// CreateInlineQuestionRuleInstanceResponse is returned by CreateInlineQuestionRuleInstance on success.
type CreateInlineQuestionRuleInstanceResponse struct {
	CreateQuestionRuleInstance CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance `json:"createQuestionRuleInstance"`
}

// GetCreateQuestionRuleInstance returns CreateInlineQuestionRuleInstanceResponse.CreateQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *CreateInlineQuestionRuleInstanceResponse) GetCreateQuestionRuleInstance() CreateInlineQuestionRuleInstanceCreateQuestionRuleInstance {
	return v.CreateQuestionRuleInstance
}

// CreateQuestionCreateQuestion includes the requested fields of the GraphQL type Question.
type CreateQuestionCreateQuestion struct {
	Id string `json:"id"`
}

// GetId returns CreateQuestionCreateQuestion.Id, and is useful for accessing the field via an interface.
func (v *CreateQuestionCreateQuestion) GetId() string { return v.Id }

// The question-service does not list questions when widgetId="",
// we need to set it to null to allow the questions to show up in the UI
type CreateQuestionInput struct {
	Title           string                            `json:"title"`
	Name            string                            `json:"name"`
	Tags            []string                          `json:"tags"`
	Description     string                            `json:"description"`
	ShowTrend       bool                              `json:"showTrend"`
	PollingInterval SchedulerPollingInterval          `json:"pollingInterval"`
	WidgetId        string                            `json:"widgetId,omitempty"`
	Queries         []QuestionQueryInput              `json:"queries"`
	Compliance      []QuestionComplianceMetaDataInput `json:"compliance"`
	Variables       []QuestionVariableInput           `json:"variables"`
}

// GetTitle returns CreateQuestionInput.Title, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetTitle() string { return v.Title }

// GetName returns CreateQuestionInput.Name, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetName() string { return v.Name }

// GetTags returns CreateQuestionInput.Tags, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetTags() []string { return v.Tags }

// GetDescription returns CreateQuestionInput.Description, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetDescription() string { return v.Description }

// GetShowTrend returns CreateQuestionInput.ShowTrend, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetShowTrend() bool { return v.ShowTrend }

// GetPollingInterval returns CreateQuestionInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetPollingInterval() SchedulerPollingInterval { return v.PollingInterval }

// GetWidgetId returns CreateQuestionInput.WidgetId, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetWidgetId() string { return v.WidgetId }

// GetQueries returns CreateQuestionInput.Queries, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetQueries() []QuestionQueryInput { return v.Queries }

// GetCompliance returns CreateQuestionInput.Compliance, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetCompliance() []QuestionComplianceMetaDataInput { return v.Compliance }

// GetVariables returns CreateQuestionInput.Variables, and is useful for accessing the field via an interface.
func (v *CreateQuestionInput) GetVariables() []QuestionVariableInput { return v.Variables }

// CreateQuestionResponse is returned by CreateQuestion on success.
type CreateQuestionResponse struct {
	CreateQuestion CreateQuestionCreateQuestion `json:"createQuestion"`
}

// GetCreateQuestion returns CreateQuestionResponse.CreateQuestion, and is useful for accessing the field via an interface.
func (v *CreateQuestionResponse) GetCreateQuestion() CreateQuestionCreateQuestion {
	return v.CreateQuestion
}

// CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance struct {
	Id          string                `json:"id"`
	Version     int                   `json:"version"`
	SpecVersion int                   `json:"specVersion"`
	Operations  []RuleOperationOutput `json:"operations"`
}

// GetId returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.Id, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetId() string { return v.Id }

// GetVersion returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetOperations returns CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

type CreateReferencedQuestionRuleInstanceInput struct {
	QuestionId                      string                   `json:"questionId"`
	Templates                       map[string]interface{}   `json:"templates"`
	Tags                            []string                 `json:"tags"`
	Name                            string                   `json:"name"`
	Description                     string                   `json:"description"`
	SpecVersion                     int                      `json:"specVersion"`
	Operations                      []RuleOperationInput     `json:"operations"`
	Outputs                         []string                 `json:"outputs"`
	PollingInterval                 SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure                 bool                     `json:"notifyOnFailure"`
	TriggerActionsOnNewEntitiesOnly bool                     `json:"triggerActionsOnNewEntitiesOnly"`
}

// GetQuestionId returns CreateReferencedQuestionRuleInstanceInput.QuestionId, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetQuestionId() string { return v.QuestionId }

// GetTemplates returns CreateReferencedQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns CreateReferencedQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns CreateReferencedQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns CreateReferencedQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns CreateReferencedQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns CreateReferencedQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns CreateReferencedQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns CreateReferencedQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns CreateReferencedQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetNotifyOnFailure() bool {
	return v.NotifyOnFailure
}

// GetTriggerActionsOnNewEntitiesOnly returns CreateReferencedQuestionRuleInstanceInput.TriggerActionsOnNewEntitiesOnly, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceInput) GetTriggerActionsOnNewEntitiesOnly() bool {
	return v.TriggerActionsOnNewEntitiesOnly
}

// CreateReferencedQuestionRuleInstanceResponse is returned by CreateReferencedQuestionRuleInstance on success.
type CreateReferencedQuestionRuleInstanceResponse struct {
	CreateQuestionRuleInstance CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance `json:"createQuestionRuleInstance"`
}

// GetCreateQuestionRuleInstance returns CreateReferencedQuestionRuleInstanceResponse.CreateQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *CreateReferencedQuestionRuleInstanceResponse) GetCreateQuestionRuleInstance() CreateReferencedQuestionRuleInstanceCreateQuestionRuleInstance {
	return v.CreateQuestionRuleInstance
}

type DeleteComplianceFrameworkInput struct {
	Id string `json:"id"`
}

// GetId returns DeleteComplianceFrameworkInput.Id, and is useful for accessing the field via an interface.
func (v *DeleteComplianceFrameworkInput) GetId() string { return v.Id }

// DeleteComplianceFrameworkItemResponse is returned by DeleteComplianceFrameworkItem on success.
type DeleteComplianceFrameworkItemResponse struct {
	DeleteComplianceFrameworkItem string `json:"deleteComplianceFrameworkItem"`
}

// GetDeleteComplianceFrameworkItem returns DeleteComplianceFrameworkItemResponse.DeleteComplianceFrameworkItem, and is useful for accessing the field via an interface.
func (v *DeleteComplianceFrameworkItemResponse) GetDeleteComplianceFrameworkItem() string {
	return v.DeleteComplianceFrameworkItem
}

// DeleteComplianceFrameworkResponse is returned by DeleteComplianceFramework on success.
type DeleteComplianceFrameworkResponse struct {
	DeleteComplianceFramework string `json:"deleteComplianceFramework"`
}

// GetDeleteComplianceFramework returns DeleteComplianceFrameworkResponse.DeleteComplianceFramework, and is useful for accessing the field via an interface.
func (v *DeleteComplianceFrameworkResponse) GetDeleteComplianceFramework() string {
	return v.DeleteComplianceFramework
}

// DeleteComplianceGroupResponse is returned by DeleteComplianceGroup on success.
type DeleteComplianceGroupResponse struct {
	DeleteComplianceGroup string `json:"deleteComplianceGroup"`
}

// GetDeleteComplianceGroup returns DeleteComplianceGroupResponse.DeleteComplianceGroup, and is useful for accessing the field via an interface.
func (v *DeleteComplianceGroupResponse) GetDeleteComplianceGroup() string {
	return v.DeleteComplianceGroup
}

// DeleteComplianceLibraryItemResponse is returned by DeleteComplianceLibraryItem on success.
type DeleteComplianceLibraryItemResponse struct {
	DeleteComplianceLibraryItem string `json:"deleteComplianceLibraryItem"`
}

// GetDeleteComplianceLibraryItem returns DeleteComplianceLibraryItemResponse.DeleteComplianceLibraryItem, and is useful for accessing the field via an interface.
func (v *DeleteComplianceLibraryItemResponse) GetDeleteComplianceLibraryItem() string {
	return v.DeleteComplianceLibraryItem
}

// DeleteQuestionDeleteQuestion includes the requested fields of the GraphQL type Question.
type DeleteQuestionDeleteQuestion struct {
	Id string `json:"id"`
}

// GetId returns DeleteQuestionDeleteQuestion.Id, and is useful for accessing the field via an interface.
func (v *DeleteQuestionDeleteQuestion) GetId() string { return v.Id }

// DeleteQuestionResponse is returned by DeleteQuestion on success.
type DeleteQuestionResponse struct {
	DeleteQuestion DeleteQuestionDeleteQuestion `json:"deleteQuestion"`
}

// GetDeleteQuestion returns DeleteQuestionResponse.DeleteQuestion, and is useful for accessing the field via an interface.
func (v *DeleteQuestionResponse) GetDeleteQuestion() DeleteQuestionDeleteQuestion {
	return v.DeleteQuestion
}

// DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult includes the requested fields of the GraphQL type DeleteRuleInstanceResult.
type DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult struct {
	Id string `json:"id"`
}

// GetId returns DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult.Id, and is useful for accessing the field via an interface.
func (v *DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult) GetId() string { return v.Id }

// DeleteRuleInstanceResponse is returned by DeleteRuleInstance on success.
type DeleteRuleInstanceResponse struct {
	DeleteRuleInstance DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult `json:"deleteRuleInstance"`
}

// GetDeleteRuleInstance returns DeleteRuleInstanceResponse.DeleteRuleInstance, and is useful for accessing the field via an interface.
func (v *DeleteRuleInstanceResponse) GetDeleteRuleInstance() DeleteRuleInstanceDeleteRuleInstanceDeleteRuleInstanceResult {
	return v.DeleteRuleInstance
}

// GetComplianceFrameworkByIdComplianceFramework includes the requested fields of the GraphQL type ComplianceFramework.
type GetComplianceFrameworkByIdComplianceFramework struct {
	Id            string                                                     `json:"id"`
	Name          string                                                     `json:"name"`
	Version       string                                                     `json:"version"`
	FrameworkType ComplianceFrameworkType                                    `json:"frameworkType"`
	WebLink       string                                                     `json:"webLink"`
	ScopeFilters  []map[string]interface{}                                   `json:"scopeFilters"`
	SummaryConfig GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig `json:"summaryConfig"`
}

// GetId returns GetComplianceFrameworkByIdComplianceFramework.Id, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFramework) GetId() string { return v.Id }

// GetName returns GetComplianceFrameworkByIdComplianceFramework.Name, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFramework) GetName() string { return v.Name }

// GetVersion returns GetComplianceFrameworkByIdComplianceFramework.Version, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFramework) GetVersion() string { return v.Version }

// GetFrameworkType returns GetComplianceFrameworkByIdComplianceFramework.FrameworkType, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFramework) GetFrameworkType() ComplianceFrameworkType {
	return v.FrameworkType
}

// GetWebLink returns GetComplianceFrameworkByIdComplianceFramework.WebLink, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFramework) GetWebLink() string { return v.WebLink }

// GetScopeFilters returns GetComplianceFrameworkByIdComplianceFramework.ScopeFilters, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFramework) GetScopeFilters() []map[string]interface{} {
	return v.ScopeFilters
}

// GetSummaryConfig returns GetComplianceFrameworkByIdComplianceFramework.SummaryConfig, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFramework) GetSummaryConfig() GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig {
	return v.SummaryConfig
}

// GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig includes the requested fields of the GraphQL type ComplianceFrameworkSummaryConfig.
type GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig struct {
	ShowPoliciesAndProcedures bool `json:"showPoliciesAndProcedures"`
	ShowEvidence              bool `json:"showEvidence"`
	ShowGapAnalysis           bool `json:"showGapAnalysis"`
	ShowAuditTracking         bool `json:"showAuditTracking"`
}

// GetShowPoliciesAndProcedures returns GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig.ShowPoliciesAndProcedures, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig) GetShowPoliciesAndProcedures() bool {
	return v.ShowPoliciesAndProcedures
}

// GetShowEvidence returns GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig.ShowEvidence, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig) GetShowEvidence() bool {
	return v.ShowEvidence
}

// GetShowGapAnalysis returns GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig.ShowGapAnalysis, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig) GetShowGapAnalysis() bool {
	return v.ShowGapAnalysis
}

// GetShowAuditTracking returns GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig.ShowAuditTracking, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdComplianceFrameworkSummaryConfig) GetShowAuditTracking() bool {
	return v.ShowAuditTracking
}

// GetComplianceFrameworkByIdResponse is returned by GetComplianceFrameworkById on success.
type GetComplianceFrameworkByIdResponse struct {
	ComplianceFramework GetComplianceFrameworkByIdComplianceFramework `json:"complianceFramework"`
}

// GetComplianceFramework returns GetComplianceFrameworkByIdResponse.ComplianceFramework, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkByIdResponse) GetComplianceFramework() GetComplianceFrameworkByIdComplianceFramework {
	return v.ComplianceFramework
}

// GetComplianceFrameworkItemByIdComplianceFrameworkItem includes the requested fields of the GraphQL type ComplianceFrameworkItem.
type GetComplianceFrameworkItemByIdComplianceFrameworkItem struct {
	Name            string `json:"name"`
	Description     string `json:"description"`
	FrameworkId     string `json:"frameworkId"`
	GroupId         string `json:"groupId"`
	DisplayCategory string `json:"displayCategory"`
	Ref             string `json:"ref"`
	WebLink         string `json:"webLink"`
}

// GetName returns GetComplianceFrameworkItemByIdComplianceFrameworkItem.Name, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdComplianceFrameworkItem) GetName() string { return v.Name }

// GetDescription returns GetComplianceFrameworkItemByIdComplianceFrameworkItem.Description, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdComplianceFrameworkItem) GetDescription() string {
	return v.Description
}

// GetFrameworkId returns GetComplianceFrameworkItemByIdComplianceFrameworkItem.FrameworkId, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdComplianceFrameworkItem) GetFrameworkId() string {
	return v.FrameworkId
}

// GetGroupId returns GetComplianceFrameworkItemByIdComplianceFrameworkItem.GroupId, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdComplianceFrameworkItem) GetGroupId() string { return v.GroupId }

// GetDisplayCategory returns GetComplianceFrameworkItemByIdComplianceFrameworkItem.DisplayCategory, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdComplianceFrameworkItem) GetDisplayCategory() string {
	return v.DisplayCategory
}

// GetRef returns GetComplianceFrameworkItemByIdComplianceFrameworkItem.Ref, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdComplianceFrameworkItem) GetRef() string { return v.Ref }

// GetWebLink returns GetComplianceFrameworkItemByIdComplianceFrameworkItem.WebLink, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdComplianceFrameworkItem) GetWebLink() string { return v.WebLink }

// GetComplianceFrameworkItemByIdResponse is returned by GetComplianceFrameworkItemById on success.
type GetComplianceFrameworkItemByIdResponse struct {
	ComplianceFrameworkItem GetComplianceFrameworkItemByIdComplianceFrameworkItem `json:"complianceFrameworkItem"`
}

// GetComplianceFrameworkItem returns GetComplianceFrameworkItemByIdResponse.ComplianceFrameworkItem, and is useful for accessing the field via an interface.
func (v *GetComplianceFrameworkItemByIdResponse) GetComplianceFrameworkItem() GetComplianceFrameworkItemByIdComplianceFrameworkItem {
	return v.ComplianceFrameworkItem
}

// GetComplianceGroupsComplianceFramework includes the requested fields of the GraphQL type ComplianceFramework.
type GetComplianceGroupsComplianceFramework struct {
	Groups []ComplianceGroup `json:"groups"`
}

// GetGroups returns GetComplianceGroupsComplianceFramework.Groups, and is useful for accessing the field via an interface.
func (v *GetComplianceGroupsComplianceFramework) GetGroups() []ComplianceGroup { return v.Groups }

// GetComplianceGroupsResponse is returned by GetComplianceGroups on success.
type GetComplianceGroupsResponse struct {
	ComplianceFramework GetComplianceGroupsComplianceFramework `json:"complianceFramework"`
}

// GetComplianceFramework returns GetComplianceGroupsResponse.ComplianceFramework, and is useful for accessing the field via an interface.
func (v *GetComplianceGroupsResponse) GetComplianceFramework() GetComplianceGroupsComplianceFramework {
	return v.ComplianceFramework
}

// GetComplianceLibraryItemByIdComplianceLibraryItem includes the requested fields of the GraphQL type ComplianceLibraryItem.
type GetComplianceLibraryItemByIdComplianceLibraryItem struct {
	Name            string `json:"name"`
	Description     string `json:"description"`
	DisplayCategory string `json:"displayCategory"`
	Ref             string `json:"ref"`
	WebLink         string `json:"webLink"`
	PolicyItemId    string `json:"policyItemId"`
}

// GetName returns GetComplianceLibraryItemByIdComplianceLibraryItem.Name, and is useful for accessing the field via an interface.
func (v *GetComplianceLibraryItemByIdComplianceLibraryItem) GetName() string { return v.Name }

// GetDescription returns GetComplianceLibraryItemByIdComplianceLibraryItem.Description, and is useful for accessing the field via an interface.
func (v *GetComplianceLibraryItemByIdComplianceLibraryItem) GetDescription() string {
	return v.Description
}

// GetDisplayCategory returns GetComplianceLibraryItemByIdComplianceLibraryItem.DisplayCategory, and is useful for accessing the field via an interface.
func (v *GetComplianceLibraryItemByIdComplianceLibraryItem) GetDisplayCategory() string {
	return v.DisplayCategory
}

// GetRef returns GetComplianceLibraryItemByIdComplianceLibraryItem.Ref, and is useful for accessing the field via an interface.
func (v *GetComplianceLibraryItemByIdComplianceLibraryItem) GetRef() string { return v.Ref }

// GetWebLink returns GetComplianceLibraryItemByIdComplianceLibraryItem.WebLink, and is useful for accessing the field via an interface.
func (v *GetComplianceLibraryItemByIdComplianceLibraryItem) GetWebLink() string { return v.WebLink }

// GetPolicyItemId returns GetComplianceLibraryItemByIdComplianceLibraryItem.PolicyItemId, and is useful for accessing the field via an interface.
func (v *GetComplianceLibraryItemByIdComplianceLibraryItem) GetPolicyItemId() string {
	return v.PolicyItemId
}

// GetComplianceLibraryItemByIdResponse is returned by GetComplianceLibraryItemById on success.
type GetComplianceLibraryItemByIdResponse struct {
	ComplianceLibraryItem GetComplianceLibraryItemByIdComplianceLibraryItem `json:"complianceLibraryItem"`
}

// GetComplianceLibraryItem returns GetComplianceLibraryItemByIdResponse.ComplianceLibraryItem, and is useful for accessing the field via an interface.
func (v *GetComplianceLibraryItemByIdResponse) GetComplianceLibraryItem() GetComplianceLibraryItemByIdComplianceLibraryItem {
	return v.ComplianceLibraryItem
}

// GetQuestionByIdQuestion includes the requested fields of the GraphQL type Question.
type GetQuestionByIdQuestion struct {
	Id              string                       `json:"id"`
	Title           string                       `json:"title"`
	Description     string                       `json:"description"`
	PollingInterval SchedulerPollingInterval     `json:"pollingInterval"`
	Queries         []QuestionQuery              `json:"queries"`
	Tags            []string                     `json:"tags"`
	Compliance      []QuestionComplianceMetaData `json:"compliance"`
}

// GetId returns GetQuestionByIdQuestion.Id, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetId() string { return v.Id }

// GetTitle returns GetQuestionByIdQuestion.Title, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetTitle() string { return v.Title }

// GetDescription returns GetQuestionByIdQuestion.Description, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetDescription() string { return v.Description }

// GetPollingInterval returns GetQuestionByIdQuestion.PollingInterval, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetQueries returns GetQuestionByIdQuestion.Queries, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetQueries() []QuestionQuery { return v.Queries }

// GetTags returns GetQuestionByIdQuestion.Tags, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetTags() []string { return v.Tags }

// GetCompliance returns GetQuestionByIdQuestion.Compliance, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdQuestion) GetCompliance() []QuestionComplianceMetaData { return v.Compliance }

// GetQuestionByIdResponse is returned by GetQuestionById on success.
type GetQuestionByIdResponse struct {
	Question GetQuestionByIdQuestion `json:"question"`
}

// GetQuestion returns GetQuestionByIdResponse.Question, and is useful for accessing the field via an interface.
func (v *GetQuestionByIdResponse) GetQuestion() GetQuestionByIdQuestion { return v.Question }

// GetQuestionRuleInstanceQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type GetQuestionRuleInstanceQuestionRuleInstance struct {
	Id                              string                                                                 `json:"id"`
	Name                            string                                                                 `json:"name"`
	Description                     string                                                                 `json:"description"`
	Version                         int                                                                    `json:"version"`
	SpecVersion                     int                                                                    `json:"specVersion"`
	Latest                          bool                                                                   `json:"latest"`
	PollingInterval                 SchedulerPollingInterval                                               `json:"pollingInterval"`
	Deleted                         bool                                                                   `json:"deleted"`
	Type                            RuleInstanceType                                                       `json:"type"`
	Templates                       map[string]interface{}                                                 `json:"templates"`
	NotifyOnFailure                 bool                                                                   `json:"notifyOnFailure"`
	TriggerActionsOnNewEntitiesOnly bool                                                                   `json:"triggerActionsOnNewEntitiesOnly"`
	QuestionId                      string                                                                 `json:"questionId"`
	Question                        GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails `json:"question"`
	Operations                      []RuleOperationOutput                                                  `json:"operations"`
	Outputs                         []string                                                               `json:"outputs"`
	Tags                            []string                                                               `json:"tags"`
}

// GetId returns GetQuestionRuleInstanceQuestionRuleInstance.Id, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetId() string { return v.Id }

// GetName returns GetQuestionRuleInstanceQuestionRuleInstance.Name, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetName() string { return v.Name }

// GetDescription returns GetQuestionRuleInstanceQuestionRuleInstance.Description, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetDescription() string { return v.Description }

// GetVersion returns GetQuestionRuleInstanceQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetVersion() int { return v.Version }

// GetSpecVersion returns GetQuestionRuleInstanceQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetSpecVersion() int { return v.SpecVersion }

// GetLatest returns GetQuestionRuleInstanceQuestionRuleInstance.Latest, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetLatest() bool { return v.Latest }

// GetPollingInterval returns GetQuestionRuleInstanceQuestionRuleInstance.PollingInterval, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetDeleted returns GetQuestionRuleInstanceQuestionRuleInstance.Deleted, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetDeleted() bool { return v.Deleted }

// GetType returns GetQuestionRuleInstanceQuestionRuleInstance.Type, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetType() RuleInstanceType { return v.Type }

// GetTemplates returns GetQuestionRuleInstanceQuestionRuleInstance.Templates, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetNotifyOnFailure returns GetQuestionRuleInstanceQuestionRuleInstance.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetNotifyOnFailure() bool {
	return v.NotifyOnFailure
}

// GetTriggerActionsOnNewEntitiesOnly returns GetQuestionRuleInstanceQuestionRuleInstance.TriggerActionsOnNewEntitiesOnly, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetTriggerActionsOnNewEntitiesOnly() bool {
	return v.TriggerActionsOnNewEntitiesOnly
}

// GetQuestionId returns GetQuestionRuleInstanceQuestionRuleInstance.QuestionId, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetQuestionId() string { return v.QuestionId }

// GetQuestion returns GetQuestionRuleInstanceQuestionRuleInstance.Question, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetQuestion() GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails {
	return v.Question
}

// GetOperations returns GetQuestionRuleInstanceQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

// GetOutputs returns GetQuestionRuleInstanceQuestionRuleInstance.Outputs, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetOutputs() []string { return v.Outputs }

// GetTags returns GetQuestionRuleInstanceQuestionRuleInstance.Tags, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstance) GetTags() []string { return v.Tags }

// GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails includes the requested fields of the GraphQL type RuleQuestionDetails.
type GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails struct {
	Queries []GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query `json:"queries"`
}

// GetQueries returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails.Queries, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetails) GetQueries() []GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query {
	return v.Queries
}

// GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query includes the requested fields of the GraphQL type J1Query.
type GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query struct {
	Name           string `json:"name"`
	Query          string `json:"query"`
	Version        string `json:"version"`
	IncludeDeleted bool   `json:"includeDeleted"`
}

// GetName returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Name, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetName() string {
	return v.Name
}

// GetQuery returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Query, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetQuery() string {
	return v.Query
}

// GetVersion returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.Version, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetVersion() string {
	return v.Version
}

// GetIncludeDeleted returns GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceQuestionRuleInstanceQuestionRuleQuestionDetailsQueriesJ1Query) GetIncludeDeleted() bool {
	return v.IncludeDeleted
}

// GetQuestionRuleInstanceResponse is returned by GetQuestionRuleInstance on success.
type GetQuestionRuleInstanceResponse struct {
	QuestionRuleInstance GetQuestionRuleInstanceQuestionRuleInstance `json:"questionRuleInstance"`
}

// GetQuestionRuleInstance returns GetQuestionRuleInstanceResponse.QuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *GetQuestionRuleInstanceResponse) GetQuestionRuleInstance() GetQuestionRuleInstanceQuestionRuleInstance {
	return v.QuestionRuleInstance
}

type J1QueryInput struct {
	Query          string `json:"query"`
	Name           string `json:"name"`
	Version        string `json:"version"`
	IncludeDeleted bool   `json:"includeDeleted"`
}

// GetQuery returns J1QueryInput.Query, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetQuery() string { return v.Query }

// GetName returns J1QueryInput.Name, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetName() string { return v.Name }

// GetVersion returns J1QueryInput.Version, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetVersion() string { return v.Version }

// GetIncludeDeleted returns J1QueryInput.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *J1QueryInput) GetIncludeDeleted() bool { return v.IncludeDeleted }

type QueryResultsAre string

const (
	QueryResultsAreBad         QueryResultsAre = "BAD"
	QueryResultsAreGood        QueryResultsAre = "GOOD"
	QueryResultsAreInformative QueryResultsAre = "INFORMATIVE"
	QueryResultsAreUnknown     QueryResultsAre = "UNKNOWN"
)

// QuestionComplianceMetaData includes the requested fields of the GraphQL type QuestionComplianceMetaData.
type QuestionComplianceMetaData struct {
	Standard     string   `json:"standard"`
	Requirements []string `json:"requirements"`
	Controls     []string `json:"controls"`
}

// GetStandard returns QuestionComplianceMetaData.Standard, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaData) GetStandard() string { return v.Standard }

// GetRequirements returns QuestionComplianceMetaData.Requirements, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaData) GetRequirements() []string { return v.Requirements }

// GetControls returns QuestionComplianceMetaData.Controls, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaData) GetControls() []string { return v.Controls }

type QuestionComplianceMetaDataInput struct {
	Standard     string   `json:"standard"`
	Requirements []string `json:"requirements"`
	Controls     []string `json:"controls"`
}

// GetStandard returns QuestionComplianceMetaDataInput.Standard, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaDataInput) GetStandard() string { return v.Standard }

// GetRequirements returns QuestionComplianceMetaDataInput.Requirements, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaDataInput) GetRequirements() []string { return v.Requirements }

// GetControls returns QuestionComplianceMetaDataInput.Controls, and is useful for accessing the field via an interface.
func (v *QuestionComplianceMetaDataInput) GetControls() []string { return v.Controls }

// QuestionQuery includes the requested fields of the GraphQL type QuestionQuery.
type QuestionQuery struct {
	Name           string          `json:"name"`
	Query          string          `json:"query"`
	Version        string          `json:"version"`
	IncludeDeleted bool            `json:"includeDeleted"`
	ResultsAre     QueryResultsAre `json:"resultsAre"`
}

// GetName returns QuestionQuery.Name, and is useful for accessing the field via an interface.
func (v *QuestionQuery) GetName() string { return v.Name }

// GetQuery returns QuestionQuery.Query, and is useful for accessing the field via an interface.
func (v *QuestionQuery) GetQuery() string { return v.Query }

// GetVersion returns QuestionQuery.Version, and is useful for accessing the field via an interface.
func (v *QuestionQuery) GetVersion() string { return v.Version }

// GetIncludeDeleted returns QuestionQuery.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *QuestionQuery) GetIncludeDeleted() bool { return v.IncludeDeleted }

// GetResultsAre returns QuestionQuery.ResultsAre, and is useful for accessing the field via an interface.
func (v *QuestionQuery) GetResultsAre() QueryResultsAre { return v.ResultsAre }

type QuestionQueryInput struct {
	Query          string          `json:"query"`
	Version        string          `json:"version"`
	Name           string          `json:"name"`
	ResultsAre     QueryResultsAre `json:"resultsAre"`
	IncludeDeleted bool            `json:"includeDeleted"`
}

// GetQuery returns QuestionQueryInput.Query, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetQuery() string { return v.Query }

// GetVersion returns QuestionQueryInput.Version, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetVersion() string { return v.Version }

// GetName returns QuestionQueryInput.Name, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetName() string { return v.Name }

// GetResultsAre returns QuestionQueryInput.ResultsAre, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetResultsAre() QueryResultsAre { return v.ResultsAre }

// GetIncludeDeleted returns QuestionQueryInput.IncludeDeleted, and is useful for accessing the field via an interface.
func (v *QuestionQueryInput) GetIncludeDeleted() bool { return v.IncludeDeleted }

type QuestionUpdate struct {
	Title           string                            `json:"title"`
	Queries         []QuestionQueryInput              `json:"queries"`
	Compliance      []QuestionComplianceMetaDataInput `json:"compliance"`
	Tags            []string                          `json:"tags"`
	Description     string                            `json:"description"`
	ShowTrend       bool                              `json:"showTrend"`
	PollingInterval SchedulerPollingInterval          `json:"pollingInterval"`
	WidgetId        string                            `json:"widgetId,omitempty"`
}

// GetTitle returns QuestionUpdate.Title, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetTitle() string { return v.Title }

// GetQueries returns QuestionUpdate.Queries, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetQueries() []QuestionQueryInput { return v.Queries }

// GetCompliance returns QuestionUpdate.Compliance, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetCompliance() []QuestionComplianceMetaDataInput { return v.Compliance }

// GetTags returns QuestionUpdate.Tags, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetTags() []string { return v.Tags }

// GetDescription returns QuestionUpdate.Description, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetDescription() string { return v.Description }

// GetShowTrend returns QuestionUpdate.ShowTrend, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetShowTrend() bool { return v.ShowTrend }

// GetPollingInterval returns QuestionUpdate.PollingInterval, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetPollingInterval() SchedulerPollingInterval { return v.PollingInterval }

// GetWidgetId returns QuestionUpdate.WidgetId, and is useful for accessing the field via an interface.
func (v *QuestionUpdate) GetWidgetId() string { return v.WidgetId }

type QuestionVariableInput struct {
	Name     string `json:"name"`
	Required bool   `json:"required"`
	Default  string `json:"default"`
}

// GetName returns QuestionVariableInput.Name, and is useful for accessing the field via an interface.
func (v *QuestionVariableInput) GetName() string { return v.Name }

// GetRequired returns QuestionVariableInput.Required, and is useful for accessing the field via an interface.
func (v *QuestionVariableInput) GetRequired() bool { return v.Required }

// GetDefault returns QuestionVariableInput.Default, and is useful for accessing the field via an interface.
func (v *QuestionVariableInput) GetDefault() string { return v.Default }

type RuleInstanceType string

const (
	RuleInstanceTypeQuestion RuleInstanceType = "QUESTION"
	RuleInstanceTypeReport   RuleInstanceType = "REPORT"
)

type RuleOperationInput struct {
	When    map[string]interface{}   `json:"when,omitempty"`
	Actions []map[string]interface{} `json:"actions"`
}

// GetWhen returns RuleOperationInput.When, and is useful for accessing the field via an interface.
func (v *RuleOperationInput) GetWhen() map[string]interface{} { return v.When }

// GetActions returns RuleOperationInput.Actions, and is useful for accessing the field via an interface.
func (v *RuleOperationInput) GetActions() []map[string]interface{} { return v.Actions }

// RuleOperationOutput includes the requested fields of the GraphQL type RuleOperation.
type RuleOperationOutput struct {
	When    map[string]interface{}   `json:"when"`
	Actions []map[string]interface{} `json:"actions"`
}

// GetWhen returns RuleOperationOutput.When, and is useful for accessing the field via an interface.
func (v *RuleOperationOutput) GetWhen() map[string]interface{} { return v.When }

// GetActions returns RuleOperationOutput.Actions, and is useful for accessing the field via an interface.
func (v *RuleOperationOutput) GetActions() []map[string]interface{} { return v.Actions }

type RuleQuestionDetailsInput struct {
	Queries []J1QueryInput `json:"queries"`
}

// GetQueries returns RuleQuestionDetailsInput.Queries, and is useful for accessing the field via an interface.
func (v *RuleQuestionDetailsInput) GetQueries() []J1QueryInput { return v.Queries }

type RuleStateInput struct {
	Actions map[string]interface{} `json:"actions"`
}

// GetActions returns RuleStateInput.Actions, and is useful for accessing the field via an interface.
func (v *RuleStateInput) GetActions() map[string]interface{} { return v.Actions }

type SchedulerPollingInterval string

const (
	SchedulerPollingIntervalDisabled      SchedulerPollingInterval = "DISABLED"
	SchedulerPollingIntervalThirtyMinutes SchedulerPollingInterval = "THIRTY_MINUTES"
	SchedulerPollingIntervalOneHour       SchedulerPollingInterval = "ONE_HOUR"
	SchedulerPollingIntervalFourHours     SchedulerPollingInterval = "FOUR_HOURS"
	SchedulerPollingIntervalEightHours    SchedulerPollingInterval = "EIGHT_HOURS"
	SchedulerPollingIntervalTwelveHours   SchedulerPollingInterval = "TWELVE_HOURS"
	SchedulerPollingIntervalOneDay        SchedulerPollingInterval = "ONE_DAY"
	SchedulerPollingIntervalOneWeek       SchedulerPollingInterval = "ONE_WEEK"
)

type UpdateComplianceFrameworkFields struct {
	Name         string                   `json:"name"`
	WebLink      string                   `json:"webLink"`
	ScopeFilters []map[string]interface{} `json:"scopeFilters"`
}

// GetName returns UpdateComplianceFrameworkFields.Name, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkFields) GetName() string { return v.Name }

// GetWebLink returns UpdateComplianceFrameworkFields.WebLink, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkFields) GetWebLink() string { return v.WebLink }

// GetScopeFilters returns UpdateComplianceFrameworkFields.ScopeFilters, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkFields) GetScopeFilters() []map[string]interface{} {
	return v.ScopeFilters
}

type UpdateComplianceFrameworkInput struct {
	Id      string                          `json:"id"`
	Updates UpdateComplianceFrameworkFields `json:"updates"`
}

// GetId returns UpdateComplianceFrameworkInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkInput) GetId() string { return v.Id }

// GetUpdates returns UpdateComplianceFrameworkInput.Updates, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkInput) GetUpdates() UpdateComplianceFrameworkFields {
	return v.Updates
}

type UpdateComplianceFrameworkItemFields struct {
	AuditStatus     ComplianceFrameworkItemAuditStatus `json:"auditStatus,omitempty"`
	Name            string                             `json:"name"`
	Description     string                             `json:"description"`
	DisplayCategory string                             `json:"displayCategory"`
	GroupId         string                             `json:"groupId"`
	Ref             string                             `json:"ref"`
	WebLink         string                             `json:"webLink"`
}

// GetAuditStatus returns UpdateComplianceFrameworkItemFields.AuditStatus, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemFields) GetAuditStatus() ComplianceFrameworkItemAuditStatus {
	return v.AuditStatus
}

// GetName returns UpdateComplianceFrameworkItemFields.Name, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemFields) GetName() string { return v.Name }

// GetDescription returns UpdateComplianceFrameworkItemFields.Description, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemFields) GetDescription() string { return v.Description }

// GetDisplayCategory returns UpdateComplianceFrameworkItemFields.DisplayCategory, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemFields) GetDisplayCategory() string { return v.DisplayCategory }

// GetGroupId returns UpdateComplianceFrameworkItemFields.GroupId, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemFields) GetGroupId() string { return v.GroupId }

// GetRef returns UpdateComplianceFrameworkItemFields.Ref, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemFields) GetRef() string { return v.Ref }

// GetWebLink returns UpdateComplianceFrameworkItemFields.WebLink, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemFields) GetWebLink() string { return v.WebLink }

type UpdateComplianceFrameworkItemInput struct {
	Id      string                              `json:"id"`
	Updates UpdateComplianceFrameworkItemFields `json:"updates"`
}

// GetId returns UpdateComplianceFrameworkItemInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemInput) GetId() string { return v.Id }

// GetUpdates returns UpdateComplianceFrameworkItemInput.Updates, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemInput) GetUpdates() UpdateComplianceFrameworkItemFields {
	return v.Updates
}

// UpdateComplianceFrameworkItemResponse is returned by UpdateComplianceFrameworkItem on success.
type UpdateComplianceFrameworkItemResponse struct {
	UpdateComplianceFrameworkItem UpdateComplianceFrameworkItemUpdateComplianceFrameworkItem `json:"updateComplianceFrameworkItem"`
}

// GetUpdateComplianceFrameworkItem returns UpdateComplianceFrameworkItemResponse.UpdateComplianceFrameworkItem, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemResponse) GetUpdateComplianceFrameworkItem() UpdateComplianceFrameworkItemUpdateComplianceFrameworkItem {
	return v.UpdateComplianceFrameworkItem
}

// UpdateComplianceFrameworkItemUpdateComplianceFrameworkItem includes the requested fields of the GraphQL type ComplianceFrameworkItem.
type UpdateComplianceFrameworkItemUpdateComplianceFrameworkItem struct {
	Id string `json:"id"`
}

// GetId returns UpdateComplianceFrameworkItemUpdateComplianceFrameworkItem.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkItemUpdateComplianceFrameworkItem) GetId() string { return v.Id }

// UpdateComplianceFrameworkResponse is returned by UpdateComplianceFramework on success.
type UpdateComplianceFrameworkResponse struct {
	UpdateComplianceFramework UpdateComplianceFrameworkUpdateComplianceFramework `json:"updateComplianceFramework"`
}

// GetUpdateComplianceFramework returns UpdateComplianceFrameworkResponse.UpdateComplianceFramework, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkResponse) GetUpdateComplianceFramework() UpdateComplianceFrameworkUpdateComplianceFramework {
	return v.UpdateComplianceFramework
}

// UpdateComplianceFrameworkUpdateComplianceFramework includes the requested fields of the GraphQL type ComplianceFramework.
type UpdateComplianceFrameworkUpdateComplianceFramework struct {
	Id string `json:"id"`
}

// GetId returns UpdateComplianceFrameworkUpdateComplianceFramework.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceFrameworkUpdateComplianceFramework) GetId() string { return v.Id }

type UpdateComplianceGroupFields struct {
	Name            string `json:"name"`
	Description     string `json:"description"`
	DisplayCategory string `json:"displayCategory"`
	FrameworkId     string `json:"frameworkId"`
	WebLink         string `json:"webLink"`
}

// GetName returns UpdateComplianceGroupFields.Name, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupFields) GetName() string { return v.Name }

// GetDescription returns UpdateComplianceGroupFields.Description, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupFields) GetDescription() string { return v.Description }

// GetDisplayCategory returns UpdateComplianceGroupFields.DisplayCategory, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupFields) GetDisplayCategory() string { return v.DisplayCategory }

// GetFrameworkId returns UpdateComplianceGroupFields.FrameworkId, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupFields) GetFrameworkId() string { return v.FrameworkId }

// GetWebLink returns UpdateComplianceGroupFields.WebLink, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupFields) GetWebLink() string { return v.WebLink }

type UpdateComplianceGroupInput struct {
	Id      string                      `json:"id"`
	Updates UpdateComplianceGroupFields `json:"updates"`
}

// GetId returns UpdateComplianceGroupInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupInput) GetId() string { return v.Id }

// GetUpdates returns UpdateComplianceGroupInput.Updates, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupInput) GetUpdates() UpdateComplianceGroupFields { return v.Updates }

// UpdateComplianceGroupResponse is returned by UpdateComplianceGroup on success.
type UpdateComplianceGroupResponse struct {
	UpdateComplianceGroup UpdateComplianceGroupUpdateComplianceGroup `json:"updateComplianceGroup"`
}

// GetUpdateComplianceGroup returns UpdateComplianceGroupResponse.UpdateComplianceGroup, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupResponse) GetUpdateComplianceGroup() UpdateComplianceGroupUpdateComplianceGroup {
	return v.UpdateComplianceGroup
}

// UpdateComplianceGroupUpdateComplianceGroup includes the requested fields of the GraphQL type ComplianceGroup.
type UpdateComplianceGroupUpdateComplianceGroup struct {
	Id string `json:"id"`
}

// GetId returns UpdateComplianceGroupUpdateComplianceGroup.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceGroupUpdateComplianceGroup) GetId() string { return v.Id }

type UpdateComplianceLibraryItemFields struct {
	Name            string `json:"name"`
	Description     string `json:"description"`
	DisplayCategory string `json:"displayCategory"`
	PolicyItemId    string `json:"policyItemId,omitempty"`
	Ref             string `json:"ref"`
	WebLink         string `json:"webLink"`
}

// GetName returns UpdateComplianceLibraryItemFields.Name, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemFields) GetName() string { return v.Name }

// GetDescription returns UpdateComplianceLibraryItemFields.Description, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemFields) GetDescription() string { return v.Description }

// GetDisplayCategory returns UpdateComplianceLibraryItemFields.DisplayCategory, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemFields) GetDisplayCategory() string { return v.DisplayCategory }

// GetPolicyItemId returns UpdateComplianceLibraryItemFields.PolicyItemId, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemFields) GetPolicyItemId() string { return v.PolicyItemId }

// GetRef returns UpdateComplianceLibraryItemFields.Ref, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemFields) GetRef() string { return v.Ref }

// GetWebLink returns UpdateComplianceLibraryItemFields.WebLink, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemFields) GetWebLink() string { return v.WebLink }

type UpdateComplianceLibraryItemInput struct {
	Id      string                            `json:"id"`
	Updates UpdateComplianceLibraryItemFields `json:"updates"`
}

// GetId returns UpdateComplianceLibraryItemInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemInput) GetId() string { return v.Id }

// GetUpdates returns UpdateComplianceLibraryItemInput.Updates, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemInput) GetUpdates() UpdateComplianceLibraryItemFields {
	return v.Updates
}

// UpdateComplianceLibraryItemResponse is returned by UpdateComplianceLibraryItem on success.
type UpdateComplianceLibraryItemResponse struct {
	UpdateComplianceLibraryItem UpdateComplianceLibraryItemUpdateComplianceLibraryItem `json:"updateComplianceLibraryItem"`
}

// GetUpdateComplianceLibraryItem returns UpdateComplianceLibraryItemResponse.UpdateComplianceLibraryItem, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemResponse) GetUpdateComplianceLibraryItem() UpdateComplianceLibraryItemUpdateComplianceLibraryItem {
	return v.UpdateComplianceLibraryItem
}

// UpdateComplianceLibraryItemUpdateComplianceLibraryItem includes the requested fields of the GraphQL type ComplianceLibraryItem.
type UpdateComplianceLibraryItemUpdateComplianceLibraryItem struct {
	Id string `json:"id"`
}

// GetId returns UpdateComplianceLibraryItemUpdateComplianceLibraryItem.Id, and is useful for accessing the field via an interface.
func (v *UpdateComplianceLibraryItemUpdateComplianceLibraryItem) GetId() string { return v.Id }

type UpdateInlineQuestionRuleInstanceInput struct {
	Question                        RuleQuestionDetailsInput `json:"question"`
	Id                              string                   `json:"id"`
	Version                         int                      `json:"version"`
	State                           RuleStateInput           `json:"state,omitempty"`
	LatestAlertId                   string                   `json:"latestAlertId,omitempty"`
	Templates                       map[string]interface{}   `json:"templates"`
	Tags                            []string                 `json:"tags"`
	Name                            string                   `json:"name"`
	Description                     string                   `json:"description"`
	SpecVersion                     int                      `json:"specVersion"`
	Operations                      []RuleOperationInput     `json:"operations"`
	Outputs                         []string                 `json:"outputs,omitempty"`
	PollingInterval                 SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure                 bool                     `json:"notifyOnFailure"`
	TriggerActionsOnNewEntitiesOnly bool                     `json:"triggerActionsOnNewEntitiesOnly"`
}

// GetQuestion returns UpdateInlineQuestionRuleInstanceInput.Question, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetQuestion() RuleQuestionDetailsInput {
	return v.Question
}

// GetId returns UpdateInlineQuestionRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetId() string { return v.Id }

// GetVersion returns UpdateInlineQuestionRuleInstanceInput.Version, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetVersion() int { return v.Version }

// GetState returns UpdateInlineQuestionRuleInstanceInput.State, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetState() RuleStateInput { return v.State }

// GetLatestAlertId returns UpdateInlineQuestionRuleInstanceInput.LatestAlertId, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetLatestAlertId() string { return v.LatestAlertId }

// GetTemplates returns UpdateInlineQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns UpdateInlineQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns UpdateInlineQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns UpdateInlineQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns UpdateInlineQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns UpdateInlineQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns UpdateInlineQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns UpdateInlineQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns UpdateInlineQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetNotifyOnFailure() bool { return v.NotifyOnFailure }

// GetTriggerActionsOnNewEntitiesOnly returns UpdateInlineQuestionRuleInstanceInput.TriggerActionsOnNewEntitiesOnly, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceInput) GetTriggerActionsOnNewEntitiesOnly() bool {
	return v.TriggerActionsOnNewEntitiesOnly
}

// UpdateInlineQuestionRuleInstanceResponse is returned by UpdateInlineQuestionRuleInstance on success.
type UpdateInlineQuestionRuleInstanceResponse struct {
	UpdateInlineQuestionRuleInstance UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance `json:"updateInlineQuestionRuleInstance"`
}

// GetUpdateInlineQuestionRuleInstance returns UpdateInlineQuestionRuleInstanceResponse.UpdateInlineQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceResponse) GetUpdateInlineQuestionRuleInstance() UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance {
	return v.UpdateInlineQuestionRuleInstance
}

// UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance struct {
	Version     int                   `json:"version"`
	SpecVersion int                   `json:"specVersion"`
	Operations  []RuleOperationOutput `json:"operations"`
}

// GetVersion returns UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetOperations returns UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *UpdateInlineQuestionRuleInstanceUpdateInlineQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

// UpdateQuestionResponse is returned by UpdateQuestion on success.
type UpdateQuestionResponse struct {
	UpdateQuestion UpdateQuestionUpdateQuestion `json:"updateQuestion"`
}

// GetUpdateQuestion returns UpdateQuestionResponse.UpdateQuestion, and is useful for accessing the field via an interface.
func (v *UpdateQuestionResponse) GetUpdateQuestion() UpdateQuestionUpdateQuestion {
	return v.UpdateQuestion
}

// UpdateQuestionUpdateQuestion includes the requested fields of the GraphQL type Question.
type UpdateQuestionUpdateQuestion struct {
	Id string `json:"id"`
}

// GetId returns UpdateQuestionUpdateQuestion.Id, and is useful for accessing the field via an interface.
func (v *UpdateQuestionUpdateQuestion) GetId() string { return v.Id }

type UpdateReferencedQuestionRuleInstanceInput struct {
	QuestionId                      string                   `json:"questionId"`
	Id                              string                   `json:"id"`
	Version                         int                      `json:"version"`
	State                           RuleStateInput           `json:"state,omitempty"`
	LatestAlertId                   string                   `json:"latestAlertId,omitempty"`
	Templates                       map[string]interface{}   `json:"templates"`
	Tags                            []string                 `json:"tags"`
	Name                            string                   `json:"name"`
	Description                     string                   `json:"description"`
	SpecVersion                     int                      `json:"specVersion"`
	Operations                      []RuleOperationInput     `json:"operations"`
	Outputs                         []string                 `json:"outputs,omitempty"`
	PollingInterval                 SchedulerPollingInterval `json:"pollingInterval"`
	NotifyOnFailure                 bool                     `json:"notifyOnFailure"`
	TriggerActionsOnNewEntitiesOnly bool                     `json:"triggerActionsOnNewEntitiesOnly"`
}

// GetQuestionId returns UpdateReferencedQuestionRuleInstanceInput.QuestionId, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetQuestionId() string { return v.QuestionId }

// GetId returns UpdateReferencedQuestionRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetId() string { return v.Id }

// GetVersion returns UpdateReferencedQuestionRuleInstanceInput.Version, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetVersion() int { return v.Version }

// GetState returns UpdateReferencedQuestionRuleInstanceInput.State, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetState() RuleStateInput { return v.State }

// GetLatestAlertId returns UpdateReferencedQuestionRuleInstanceInput.LatestAlertId, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetLatestAlertId() string { return v.LatestAlertId }

// GetTemplates returns UpdateReferencedQuestionRuleInstanceInput.Templates, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetTemplates() map[string]interface{} {
	return v.Templates
}

// GetTags returns UpdateReferencedQuestionRuleInstanceInput.Tags, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetTags() []string { return v.Tags }

// GetName returns UpdateReferencedQuestionRuleInstanceInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetName() string { return v.Name }

// GetDescription returns UpdateReferencedQuestionRuleInstanceInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetDescription() string { return v.Description }

// GetSpecVersion returns UpdateReferencedQuestionRuleInstanceInput.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetSpecVersion() int { return v.SpecVersion }

// GetOperations returns UpdateReferencedQuestionRuleInstanceInput.Operations, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetOperations() []RuleOperationInput {
	return v.Operations
}

// GetOutputs returns UpdateReferencedQuestionRuleInstanceInput.Outputs, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetOutputs() []string { return v.Outputs }

// GetPollingInterval returns UpdateReferencedQuestionRuleInstanceInput.PollingInterval, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetPollingInterval() SchedulerPollingInterval {
	return v.PollingInterval
}

// GetNotifyOnFailure returns UpdateReferencedQuestionRuleInstanceInput.NotifyOnFailure, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetNotifyOnFailure() bool {
	return v.NotifyOnFailure
}

// GetTriggerActionsOnNewEntitiesOnly returns UpdateReferencedQuestionRuleInstanceInput.TriggerActionsOnNewEntitiesOnly, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceInput) GetTriggerActionsOnNewEntitiesOnly() bool {
	return v.TriggerActionsOnNewEntitiesOnly
}

// UpdateReferencedQuestionRuleInstanceResponse is returned by UpdateReferencedQuestionRuleInstance on success.
type UpdateReferencedQuestionRuleInstanceResponse struct {
	UpdateReferencedQuestionRuleInstance UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance `json:"updateReferencedQuestionRuleInstance"`
}

// GetUpdateReferencedQuestionRuleInstance returns UpdateReferencedQuestionRuleInstanceResponse.UpdateReferencedQuestionRuleInstance, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceResponse) GetUpdateReferencedQuestionRuleInstance() UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance {
	return v.UpdateReferencedQuestionRuleInstance
}

// UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance includes the requested fields of the GraphQL type QuestionRuleInstance.
type UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance struct {
	Version     int                   `json:"version"`
	SpecVersion int                   `json:"specVersion"`
	Operations  []RuleOperationOutput `json:"operations"`
}

// GetVersion returns UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance.Version, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance) GetVersion() int {
	return v.Version
}

// GetSpecVersion returns UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance.SpecVersion, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance) GetSpecVersion() int {
	return v.SpecVersion
}

// GetOperations returns UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance.Operations, and is useful for accessing the field via an interface.
func (v *UpdateReferencedQuestionRuleInstanceUpdateReferencedQuestionRuleInstance) GetOperations() []RuleOperationOutput {
	return v.Operations
}

// __CreateComplianceFrameworkInput is used internally by genqlient
type __CreateComplianceFrameworkInput struct {
	Framework CreateComplianceFrameworkInput `json:"framework"`
}

// GetFramework returns __CreateComplianceFrameworkInput.Framework, and is useful for accessing the field via an interface.
func (v *__CreateComplianceFrameworkInput) GetFramework() CreateComplianceFrameworkInput {
	return v.Framework
}

// __CreateComplianceFrameworkItemInput is used internally by genqlient
type __CreateComplianceFrameworkItemInput struct {
	Input CreateComplianceFrameworkItemInput `json:"input"`
}

// GetInput returns __CreateComplianceFrameworkItemInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateComplianceFrameworkItemInput) GetInput() CreateComplianceFrameworkItemInput {
	return v.Input
}

// __CreateComplianceGroupInput is used internally by genqlient
type __CreateComplianceGroupInput struct {
	Input CreateComplianceGroupInput `json:"input"`
}

// GetInput returns __CreateComplianceGroupInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateComplianceGroupInput) GetInput() CreateComplianceGroupInput { return v.Input }

// __CreateComplianceLibraryItemInput is used internally by genqlient
type __CreateComplianceLibraryItemInput struct {
	Input CreateComplianceLibraryItemInput `json:"input"`
}

// GetInput returns __CreateComplianceLibraryItemInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateComplianceLibraryItemInput) GetInput() CreateComplianceLibraryItemInput {
	return v.Input
}

// __CreateInlineQuestionRuleInstanceInput is used internally by genqlient
type __CreateInlineQuestionRuleInstanceInput struct {
	Instance CreateInlineQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __CreateInlineQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__CreateInlineQuestionRuleInstanceInput) GetInstance() CreateInlineQuestionRuleInstanceInput {
	return v.Instance
}

// __CreateQuestionInput is used internally by genqlient
type __CreateQuestionInput struct {
	Question CreateQuestionInput `json:"question"`
}

// GetQuestion returns __CreateQuestionInput.Question, and is useful for accessing the field via an interface.
func (v *__CreateQuestionInput) GetQuestion() CreateQuestionInput { return v.Question }

// __CreateReferencedQuestionRuleInstanceInput is used internally by genqlient
type __CreateReferencedQuestionRuleInstanceInput struct {
	Instance CreateReferencedQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __CreateReferencedQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__CreateReferencedQuestionRuleInstanceInput) GetInstance() CreateReferencedQuestionRuleInstanceInput {
	return v.Instance
}

// __DeleteComplianceFrameworkInput is used internally by genqlient
type __DeleteComplianceFrameworkInput struct {
	Input DeleteComplianceFrameworkInput `json:"input"`
}

// GetInput returns __DeleteComplianceFrameworkInput.Input, and is useful for accessing the field via an interface.
func (v *__DeleteComplianceFrameworkInput) GetInput() DeleteComplianceFrameworkInput { return v.Input }

// __DeleteComplianceFrameworkItemInput is used internally by genqlient
type __DeleteComplianceFrameworkItemInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteComplianceFrameworkItemInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteComplianceFrameworkItemInput) GetId() string { return v.Id }

// __DeleteComplianceGroupInput is used internally by genqlient
type __DeleteComplianceGroupInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteComplianceGroupInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteComplianceGroupInput) GetId() string { return v.Id }

// __DeleteComplianceLibraryItemInput is used internally by genqlient
type __DeleteComplianceLibraryItemInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteComplianceLibraryItemInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteComplianceLibraryItemInput) GetId() string { return v.Id }

// __DeleteQuestionInput is used internally by genqlient
type __DeleteQuestionInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteQuestionInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteQuestionInput) GetId() string { return v.Id }

// __DeleteRuleInstanceInput is used internally by genqlient
type __DeleteRuleInstanceInput struct {
	Id string `json:"id"`
}

// GetId returns __DeleteRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *__DeleteRuleInstanceInput) GetId() string { return v.Id }

// __GetComplianceFrameworkByIdInput is used internally by genqlient
type __GetComplianceFrameworkByIdInput struct {
	FrameworkId string `json:"frameworkId"`
}

// GetFrameworkId returns __GetComplianceFrameworkByIdInput.FrameworkId, and is useful for accessing the field via an interface.
func (v *__GetComplianceFrameworkByIdInput) GetFrameworkId() string { return v.FrameworkId }

// __GetComplianceFrameworkItemByIdInput is used internally by genqlient
type __GetComplianceFrameworkItemByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetComplianceFrameworkItemByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetComplianceFrameworkItemByIdInput) GetId() string { return v.Id }

// __GetComplianceGroupsInput is used internally by genqlient
type __GetComplianceGroupsInput struct {
	FrameworkId string `json:"frameworkId"`
}

// GetFrameworkId returns __GetComplianceGroupsInput.FrameworkId, and is useful for accessing the field via an interface.
func (v *__GetComplianceGroupsInput) GetFrameworkId() string { return v.FrameworkId }

// __GetComplianceLibraryItemByIdInput is used internally by genqlient
type __GetComplianceLibraryItemByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetComplianceLibraryItemByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetComplianceLibraryItemByIdInput) GetId() string { return v.Id }

// __GetQuestionByIdInput is used internally by genqlient
type __GetQuestionByIdInput struct {
	Id string `json:"id"`
}

// GetId returns __GetQuestionByIdInput.Id, and is useful for accessing the field via an interface.
func (v *__GetQuestionByIdInput) GetId() string { return v.Id }

// __GetQuestionRuleInstanceInput is used internally by genqlient
type __GetQuestionRuleInstanceInput struct {
	Id string `json:"id"`
}

// GetId returns __GetQuestionRuleInstanceInput.Id, and is useful for accessing the field via an interface.
func (v *__GetQuestionRuleInstanceInput) GetId() string { return v.Id }

// __UpdateComplianceFrameworkInput is used internally by genqlient
type __UpdateComplianceFrameworkInput struct {
	Input UpdateComplianceFrameworkInput `json:"input"`
}

// GetInput returns __UpdateComplianceFrameworkInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateComplianceFrameworkInput) GetInput() UpdateComplianceFrameworkInput { return v.Input }

// __UpdateComplianceFrameworkItemInput is used internally by genqlient
type __UpdateComplianceFrameworkItemInput struct {
	Input UpdateComplianceFrameworkItemInput `json:"input"`
}

// GetInput returns __UpdateComplianceFrameworkItemInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateComplianceFrameworkItemInput) GetInput() UpdateComplianceFrameworkItemInput {
	return v.Input
}

// __UpdateComplianceGroupInput is used internally by genqlient
type __UpdateComplianceGroupInput struct {
	Input UpdateComplianceGroupInput `json:"input"`
}

// GetInput returns __UpdateComplianceGroupInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateComplianceGroupInput) GetInput() UpdateComplianceGroupInput { return v.Input }

// __UpdateComplianceLibraryItemInput is used internally by genqlient
type __UpdateComplianceLibraryItemInput struct {
	Input UpdateComplianceLibraryItemInput `json:"input"`
}

// GetInput returns __UpdateComplianceLibraryItemInput.Input, and is useful for accessing the field via an interface.
func (v *__UpdateComplianceLibraryItemInput) GetInput() UpdateComplianceLibraryItemInput {
	return v.Input
}

// __UpdateInlineQuestionRuleInstanceInput is used internally by genqlient
type __UpdateInlineQuestionRuleInstanceInput struct {
	Instance UpdateInlineQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __UpdateInlineQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__UpdateInlineQuestionRuleInstanceInput) GetInstance() UpdateInlineQuestionRuleInstanceInput {
	return v.Instance
}

// __UpdateQuestionInput is used internally by genqlient
type __UpdateQuestionInput struct {
	Id     string         `json:"id"`
	Update QuestionUpdate `json:"update"`
}

// GetId returns __UpdateQuestionInput.Id, and is useful for accessing the field via an interface.
func (v *__UpdateQuestionInput) GetId() string { return v.Id }

// GetUpdate returns __UpdateQuestionInput.Update, and is useful for accessing the field via an interface.
func (v *__UpdateQuestionInput) GetUpdate() QuestionUpdate { return v.Update }

// __UpdateReferencedQuestionRuleInstanceInput is used internally by genqlient
type __UpdateReferencedQuestionRuleInstanceInput struct {
	Instance UpdateReferencedQuestionRuleInstanceInput `json:"instance"`
}

// GetInstance returns __UpdateReferencedQuestionRuleInstanceInput.Instance, and is useful for accessing the field via an interface.
func (v *__UpdateReferencedQuestionRuleInstanceInput) GetInstance() UpdateReferencedQuestionRuleInstanceInput {
	return v.Instance
}

func CreateComplianceFramework(
	ctx context.Context,
	client graphql.Client,
	framework CreateComplianceFrameworkInput,
) (*CreateComplianceFrameworkResponse, error) {
	req := &graphql.Request{
		OpName: "CreateComplianceFramework",
		Query: `
mutation CreateComplianceFramework ($framework: CreateComplianceFrameworkInput!) {
	createComplianceFramework(input: $framework) {
		id
	}
}
`,
		Variables: &__CreateComplianceFrameworkInput{
			Framework: framework,
		},
	}
	var err error

	var data CreateComplianceFrameworkResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateComplianceFrameworkItem(
	ctx context.Context,
	client graphql.Client,
	input CreateComplianceFrameworkItemInput,
) (*CreateComplianceFrameworkItemResponse, error) {
	req := &graphql.Request{
		OpName: "CreateComplianceFrameworkItem",
		Query: `
mutation CreateComplianceFrameworkItem ($input: CreateComplianceFrameworkItemInput!) {
	createComplianceFrameworkItem(input: $input) {
		id
	}
}
`,
		Variables: &__CreateComplianceFrameworkItemInput{
			Input: input,
		},
	}
	var err error

	var data CreateComplianceFrameworkItemResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateComplianceGroup(
	ctx context.Context,
	client graphql.Client,
	input CreateComplianceGroupInput,
) (*CreateComplianceGroupResponse, error) {
	req := &graphql.Request{
		OpName: "CreateComplianceGroup",
		Query: `
mutation CreateComplianceGroup ($input: CreateComplianceGroupInput!) {
	createComplianceGroup(input: $input) {
		id
	}
}
`,
		Variables: &__CreateComplianceGroupInput{
			Input: input,
		},
	}
	var err error

	var data CreateComplianceGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateComplianceLibraryItem(
	ctx context.Context,
	client graphql.Client,
	input CreateComplianceLibraryItemInput,
) (*CreateComplianceLibraryItemResponse, error) {
	req := &graphql.Request{
		OpName: "CreateComplianceLibraryItem",
		Query: `
mutation CreateComplianceLibraryItem ($input: CreateComplianceLibraryItemInput!) {
	createComplianceLibraryItem(input: $input) {
		id
	}
}
`,
		Variables: &__CreateComplianceLibraryItemInput{
			Input: input,
		},
	}
	var err error

	var data CreateComplianceLibraryItemResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateInlineQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance CreateInlineQuestionRuleInstanceInput,
) (*CreateInlineQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "CreateInlineQuestionRuleInstance",
		Query: `
mutation CreateInlineQuestionRuleInstance ($instance: CreateInlineQuestionRuleInstanceInput!) {
	createQuestionRuleInstance: createInlineQuestionRuleInstance(instance: $instance) {
		id
		version
		specVersion
		question {
			queries {
				name
				query
				version
				includeDeleted
			}
		}
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__CreateInlineQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data CreateInlineQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateQuestion(
	ctx context.Context,
	client graphql.Client,
	question CreateQuestionInput,
) (*CreateQuestionResponse, error) {
	req := &graphql.Request{
		OpName: "CreateQuestion",
		Query: `
mutation CreateQuestion ($question: CreateQuestionInput!) {
	createQuestion(question: $question) {
		id
	}
}
`,
		Variables: &__CreateQuestionInput{
			Question: question,
		},
	}
	var err error

	var data CreateQuestionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func CreateReferencedQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance CreateReferencedQuestionRuleInstanceInput,
) (*CreateReferencedQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "CreateReferencedQuestionRuleInstance",
		Query: `
mutation CreateReferencedQuestionRuleInstance ($instance: CreateReferencedQuestionRuleInstanceInput!) {
	createQuestionRuleInstance: createReferencedQuestionRuleInstance(instance: $instance) {
		id
		version
		specVersion
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__CreateReferencedQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data CreateReferencedQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteComplianceFramework(
	ctx context.Context,
	client graphql.Client,
	input DeleteComplianceFrameworkInput,
) (*DeleteComplianceFrameworkResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteComplianceFramework",
		Query: `
mutation DeleteComplianceFramework ($input: DeleteComplianceFrameworkInput!) {
	deleteComplianceFramework(input: $input)
}
`,
		Variables: &__DeleteComplianceFrameworkInput{
			Input: input,
		},
	}
	var err error

	var data DeleteComplianceFrameworkResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteComplianceFrameworkItem(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteComplianceFrameworkItemResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteComplianceFrameworkItem",
		Query: `
mutation DeleteComplianceFrameworkItem ($id: ID!) {
	deleteComplianceFrameworkItem(input: {id:$id})
}
`,
		Variables: &__DeleteComplianceFrameworkItemInput{
			Id: id,
		},
	}
	var err error

	var data DeleteComplianceFrameworkItemResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteComplianceGroup(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteComplianceGroupResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteComplianceGroup",
		Query: `
mutation DeleteComplianceGroup ($id: ID!) {
	deleteComplianceGroup(input: {id:$id})
}
`,
		Variables: &__DeleteComplianceGroupInput{
			Id: id,
		},
	}
	var err error

	var data DeleteComplianceGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteComplianceLibraryItem(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteComplianceLibraryItemResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteComplianceLibraryItem",
		Query: `
mutation DeleteComplianceLibraryItem ($id: ID!) {
	deleteComplianceLibraryItem(input: {id:$id})
}
`,
		Variables: &__DeleteComplianceLibraryItemInput{
			Id: id,
		},
	}
	var err error

	var data DeleteComplianceLibraryItemResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteQuestion(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteQuestionResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteQuestion",
		Query: `
mutation DeleteQuestion ($id: ID!) {
	deleteQuestion(id: $id) {
		id
	}
}
`,
		Variables: &__DeleteQuestionInput{
			Id: id,
		},
	}
	var err error

	var data DeleteQuestionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func DeleteRuleInstance(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*DeleteRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "DeleteRuleInstance",
		Query: `
mutation DeleteRuleInstance ($id: ID!) {
	deleteRuleInstance(id: $id) {
		id
	}
}
`,
		Variables: &__DeleteRuleInstanceInput{
			Id: id,
		},
	}
	var err error

	var data DeleteRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetComplianceFrameworkById(
	ctx context.Context,
	client graphql.Client,
	frameworkId string,
) (*GetComplianceFrameworkByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetComplianceFrameworkById",
		Query: `
query GetComplianceFrameworkById ($frameworkId: ID!) {
	complianceFramework(input: {id:$frameworkId}) {
		id
		name
		version
		frameworkType
		webLink
		scopeFilters
		summaryConfig {
			showPoliciesAndProcedures
			showEvidence
			showGapAnalysis
			showAuditTracking
		}
	}
}
`,
		Variables: &__GetComplianceFrameworkByIdInput{
			FrameworkId: frameworkId,
		},
	}
	var err error

	var data GetComplianceFrameworkByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetComplianceFrameworkItemById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetComplianceFrameworkItemByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetComplianceFrameworkItemById",
		Query: `
query GetComplianceFrameworkItemById ($id: ID!) {
	complianceFrameworkItem(input: {id:$id}) {
		name
		description
		frameworkId
		groupId
		displayCategory
		ref
		webLink
	}
}
`,
		Variables: &__GetComplianceFrameworkItemByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetComplianceFrameworkItemByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// FIXME: there is currently no `complianceGroup` query, so the full list
// must be retrieved and then searched for the matching ID
func GetComplianceGroups(
	ctx context.Context,
	client graphql.Client,
	frameworkId string,
) (*GetComplianceGroupsResponse, error) {
	req := &graphql.Request{
		OpName: "GetComplianceGroups",
		Query: `
query GetComplianceGroups ($frameworkId: ID!) {
	complianceFramework(input: {id:$frameworkId}) {
		groups {
			id
			frameworkId
			name
			description
			displayCategory
			webLink
		}
	}
}
`,
		Variables: &__GetComplianceGroupsInput{
			FrameworkId: frameworkId,
		},
	}
	var err error

	var data GetComplianceGroupsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetComplianceLibraryItemById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetComplianceLibraryItemByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetComplianceLibraryItemById",
		Query: `
query GetComplianceLibraryItemById ($id: ID!) {
	complianceLibraryItem(input: {id:$id}) {
		name
		description
		displayCategory
		ref
		webLink
		policyItemId
	}
}
`,
		Variables: &__GetComplianceLibraryItemByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetComplianceLibraryItemByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetQuestionById(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetQuestionByIdResponse, error) {
	req := &graphql.Request{
		OpName: "GetQuestionById",
		Query: `
query GetQuestionById ($id: ID!) {
	question(id: $id) {
		id
		title
		description
		pollingInterval
		queries {
			name
			query
			version
			includeDeleted
			resultsAre
		}
		tags
		compliance {
			standard
			requirements
			controls
		}
	}
}
`,
		Variables: &__GetQuestionByIdInput{
			Id: id,
		},
	}
	var err error

	var data GetQuestionByIdResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*GetQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "GetQuestionRuleInstance",
		Query: `
query GetQuestionRuleInstance ($id: ID!) {
	questionRuleInstance(id: $id) {
		id
		name
		description
		version
		specVersion
		latest
		pollingInterval
		deleted
		type
		templates
		notifyOnFailure
		triggerActionsOnNewEntitiesOnly
		questionId
		question {
			queries {
				name
				query
				version
				includeDeleted
			}
		}
		operations {
			when
			actions
		}
		outputs
		tags
	}
}
`,
		Variables: &__GetQuestionRuleInstanceInput{
			Id: id,
		},
	}
	var err error

	var data GetQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateComplianceFramework(
	ctx context.Context,
	client graphql.Client,
	input UpdateComplianceFrameworkInput,
) (*UpdateComplianceFrameworkResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateComplianceFramework",
		Query: `
mutation UpdateComplianceFramework ($input: UpdateComplianceFrameworkInput!) {
	updateComplianceFramework(input: $input) {
		id
	}
}
`,
		Variables: &__UpdateComplianceFrameworkInput{
			Input: input,
		},
	}
	var err error

	var data UpdateComplianceFrameworkResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateComplianceFrameworkItem(
	ctx context.Context,
	client graphql.Client,
	input UpdateComplianceFrameworkItemInput,
) (*UpdateComplianceFrameworkItemResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateComplianceFrameworkItem",
		Query: `
mutation UpdateComplianceFrameworkItem ($input: UpdateComplianceFrameworkItemInput!) {
	updateComplianceFrameworkItem(input: $input) {
		id
	}
}
`,
		Variables: &__UpdateComplianceFrameworkItemInput{
			Input: input,
		},
	}
	var err error

	var data UpdateComplianceFrameworkItemResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateComplianceGroup(
	ctx context.Context,
	client graphql.Client,
	input UpdateComplianceGroupInput,
) (*UpdateComplianceGroupResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateComplianceGroup",
		Query: `
mutation UpdateComplianceGroup ($input: UpdateComplianceGroupInput!) {
	updateComplianceGroup(input: $input) {
		id
	}
}
`,
		Variables: &__UpdateComplianceGroupInput{
			Input: input,
		},
	}
	var err error

	var data UpdateComplianceGroupResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateComplianceLibraryItem(
	ctx context.Context,
	client graphql.Client,
	input UpdateComplianceLibraryItemInput,
) (*UpdateComplianceLibraryItemResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateComplianceLibraryItem",
		Query: `
mutation UpdateComplianceLibraryItem ($input: UpdateComplianceLibraryItemInput!) {
	updateComplianceLibraryItem(input: $input) {
		id
	}
}
`,
		Variables: &__UpdateComplianceLibraryItemInput{
			Input: input,
		},
	}
	var err error

	var data UpdateComplianceLibraryItemResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The API is inconsistent about empty values, so `omitempty` is required
// for some of these. For example "when: null," will produce an error, but
// `templates: null` will not when include in the request.
func UpdateInlineQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance UpdateInlineQuestionRuleInstanceInput,
) (*UpdateInlineQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateInlineQuestionRuleInstance",
		Query: `
mutation UpdateInlineQuestionRuleInstance ($instance: UpdateInlineQuestionRuleInstanceInput!) {
	updateInlineQuestionRuleInstance(instance: $instance) {
		version
		specVersion
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__UpdateInlineQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data UpdateInlineQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateQuestion(
	ctx context.Context,
	client graphql.Client,
	id string,
	update QuestionUpdate,
) (*UpdateQuestionResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateQuestion",
		Query: `
mutation UpdateQuestion ($id: ID!, $update: QuestionUpdate!) {
	updateQuestion(id: $id, update: $update) {
		id
	}
}
`,
		Variables: &__UpdateQuestionInput{
			Id:     id,
			Update: update,
		},
	}
	var err error

	var data UpdateQuestionResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func UpdateReferencedQuestionRuleInstance(
	ctx context.Context,
	client graphql.Client,
	instance UpdateReferencedQuestionRuleInstanceInput,
) (*UpdateReferencedQuestionRuleInstanceResponse, error) {
	req := &graphql.Request{
		OpName: "UpdateReferencedQuestionRuleInstance",
		Query: `
mutation UpdateReferencedQuestionRuleInstance ($instance: UpdateReferencedQuestionRuleInstanceInput!) {
	updateReferencedQuestionRuleInstance(instance: $instance) {
		version
		specVersion
		operations {
			when
			actions
		}
	}
}
`,
		Variables: &__UpdateReferencedQuestionRuleInstanceInput{
			Instance: instance,
		},
	}
	var err error

	var data UpdateReferencedQuestionRuleInstanceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
