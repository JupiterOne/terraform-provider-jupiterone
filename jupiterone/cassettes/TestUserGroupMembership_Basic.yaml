---
version: 2
interactions:
    - id: 0
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 467
        transfer_encoding: []
        trailer: {}
        host: graphql.us.jupiterone.io
        remote_addr: ""
        request_uri: ""
        body: '{"query":"\nmutation CreateUserGroup ($name: String!, $description: String, $queryPolicy: [JSON!], $abacPermissions: [String!]) {\n\tcreateIamGroup(name: $name, description: $description, queryPolicy: $queryPolicy, abacPermissions: $abacPermissions) {\n\t\tid\n\t}\n}\n","variables":{"name":"tf-provider-test-user-group","description":"Test user group for Terraform provider membership test","queryPolicy":null,"abacPermissions":[]},"operationName":"CreateUserGroup"}'
        form: {}
        headers:
            Cache-Control:
                - no-cache
            Content-Type:
                - application/json
        url: https://graphql.us.jupiterone.io/
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 74
        uncompressed: false
        body: |
            {"data":{"createIamGroup":{"id":"dc117a09-ee0d-43b3-bb1e-774ce0928f97"}}}
        headers:
            Access-Control-Allow-Credentials:
                - "true"
            Content-Length:
                - "74"
            Content-Security-Policy:
                - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self'' https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self'' data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
            Content-Type:
                - application/json
            Cross-Origin-Embedder-Policy:
                - require-corp
            Cross-Origin-Opener-Policy:
                - same-origin
            Cross-Origin-Resource-Policy:
                - same-origin
            Expect-Ct:
                - max-age=0
            Origin-Agent-Cluster:
                - ?1
            Ratelimit-Limit:
                - "1000"
            Ratelimit-Remaining:
                - "999"
            Ratelimit-Requested:
                - "1"
            Ratelimit-Reset:
                - "1"
            Referrer-Policy:
                - no-referrer
            Strict-Transport-Security:
                - max-age=15552000; includeSubDomains
            Vary:
                - Origin
            X-Content-Type-Options:
                - nosniff
            X-Dns-Prefetch-Control:
                - "off"
            X-Download-Options:
                - noopen
            X-Frame-Options:
                - SAMEORIGIN
            X-Permitted-Cross-Domain-Policies:
                - none
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 450.859209ms
    - id: 1
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 269
        transfer_encoding: []
        trailer: {}
        host: graphql.us.jupiterone.io
        remote_addr: ""
        request_uri: ""
        body: '{"query":"\nmutation InviteUser ($email: String!, $groupId: String!) {\n\tinvite(input: {email:$email,groupId:$groupId}) {\n\t\tid\n\t}\n}\n","variables":{"email":"test.user@jupiterone.com","groupId":"dc117a09-ee0d-43b3-bb1e-774ce0928f97"},"operationName":"InviteUser"}'
        form: {}
        headers:
            Cache-Control:
                - no-cache
            Content-Type:
                - application/json
        url: https://graphql.us.jupiterone.io/
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 66
        uncompressed: false
        body: |
            {"data":{"invite":{"id":"5d86a1b3-4acd-47b5-bfc2-a5bcaa5374cf"}}}
        headers:
            Access-Control-Allow-Credentials:
                - "true"
            Content-Length:
                - "66"
            Content-Security-Policy:
                - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self'' https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self'' data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
            Content-Type:
                - application/json
            Cross-Origin-Embedder-Policy:
                - require-corp
            Cross-Origin-Opener-Policy:
                - same-origin
            Cross-Origin-Resource-Policy:
                - same-origin
            Expect-Ct:
                - max-age=0
            Origin-Agent-Cluster:
                - ?1
            Ratelimit-Limit:
                - "1000"
            Ratelimit-Remaining:
                - "999"
            Ratelimit-Requested:
                - "1"
            Ratelimit-Reset:
                - "1"
            Referrer-Policy:
                - no-referrer
            Strict-Transport-Security:
                - max-age=15552000; includeSubDomains
            Vary:
                - Origin
            X-Content-Type-Options:
                - nosniff
            X-Dns-Prefetch-Control:
                - "off"
            X-Download-Options:
                - noopen
            X-Frame-Options:
                - SAMEORIGIN
            X-Permitted-Cross-Domain-Policies:
                - none
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 666.524ms
    - id: 2
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 321
        transfer_encoding: []
        trailer: {}
        host: graphql.us.jupiterone.io
        remote_addr: ""
        request_uri: ""
        body: '{"query":"\nquery GetUserGroup ($id: String!) {\n\tiamGetGroup(group: $id) {\n\t\tid\n\t\tgroupName\n\t\tgroupDescription\n\t\tgroupQueryPolicy {\n\t\t\tstatement\n\t\t}\n\t\tgroupAbacPermission {\n\t\t\tstatement\n\t\t}\n\t}\n}\n","variables":{"id":"dc117a09-ee0d-43b3-bb1e-774ce0928f97"},"operationName":"GetUserGroup"}'
        form: {}
        headers:
            Cache-Control:
                - no-cache
            Content-Type:
                - application/json
        url: https://graphql.us.jupiterone.io/
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 264
        uncompressed: false
        body: |
            {"data":{"iamGetGroup":{"id":"dc117a09-ee0d-43b3-bb1e-774ce0928f97","groupName":"tf-provider-test-user-group","groupDescription":"Test user group for Terraform provider membership test","groupQueryPolicy":{"statement":[]},"groupAbacPermission":{"statement":[]}}}}
        headers:
            Access-Control-Allow-Credentials:
                - "true"
            Content-Length:
                - "264"
            Content-Security-Policy:
                - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self'' https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self'' data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
            Content-Type:
                - application/json
            Cross-Origin-Embedder-Policy:
                - require-corp
            Cross-Origin-Opener-Policy:
                - same-origin
            Cross-Origin-Resource-Policy:
                - same-origin
            Expect-Ct:
                - max-age=0
            Origin-Agent-Cluster:
                - ?1
            Ratelimit-Limit:
                - "1000"
            Ratelimit-Remaining:
                - "999"
            Ratelimit-Requested:
                - "1"
            Ratelimit-Reset:
                - "1"
            Referrer-Policy:
                - no-referrer
            Strict-Transport-Security:
                - max-age=15552000; includeSubDomains
            Vary:
                - Origin
            X-Content-Type-Options:
                - nosniff
            X-Dns-Prefetch-Control:
                - "off"
            X-Download-Options:
                - noopen
            X-Frame-Options:
                - SAMEORIGIN
            X-Permitted-Cross-Domain-Policies:
                - none
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 372.387ms
    - id: 3
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 470
        transfer_encoding: []
        trailer: {}
        host: graphql.us.jupiterone.io
        remote_addr: ""
        request_uri: ""
        body: '{"query":"\nquery GetUsersByEmail ($email: String!) {\n\tiamGetUserList(emailFilter: $email, limit: 1000) {\n\t\titems {\n\t\t\tid\n\t\t\temail\n\t\t\tnickName\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tuserGroups(limit: 3000) {\n\t\t\t\titems {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t\tpageInfo {\n\t\t\t\t\tendCursor\n\t\t\t\t}\n\t\t\t}\n\t\t\t_timeCreated\n\t\t\t_timeUpdated\n\t\t}\n\t}\n}\n","variables":{"email":"test.user@jupiterone.com"},"operationName":"GetUsersByEmail"}'
        form: {}
        headers:
            Cache-Control:
                - no-cache
            Content-Type:
                - application/json
        url: https://graphql.us.jupiterone.io/
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 340
        uncompressed: false
        body: |
            {"data":{"iamGetUserList":{"items":[{"id":"03c55cd7-f210-48fd-9e0f-96538ef49784","email":"test.user@jupiterone.com","nickName":"test.user","firstName":null,"lastName":null,"userGroups":{"items":[{"id":"dc117a09-ee0d-43b3-bb1e-774ce0928f97"}],"pageInfo":{"endCursor":null}},"_timeCreated":"1715954859648","_timeUpdated":"1715954859648"}]}}}
        headers:
            Access-Control-Allow-Credentials:
                - "true"
            Content-Length:
                - "340"
            Content-Security-Policy:
                - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self'' https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self'' data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
            Content-Type:
                - application/json
            Cross-Origin-Embedder-Policy:
                - require-corp
            Cross-Origin-Opener-Policy:
                - same-origin
            Cross-Origin-Resource-Policy:
                - same-origin
            Expect-Ct:
                - max-age=0
            Origin-Agent-Cluster:
                - ?1
            Ratelimit-Limit:
                - "1000"
            Ratelimit-Remaining:
                - "999"
            Ratelimit-Requested:
                - "1"
            Ratelimit-Reset:
                - "1"
            Referrer-Policy:
                - no-referrer
            Strict-Transport-Security:
                - max-age=15552000; includeSubDomains
            Vary:
                - Origin
            X-Content-Type-Options:
                - nosniff
            X-Dns-Prefetch-Control:
                - "off"
            X-Download-Options:
                - noopen
            X-Frame-Options:
                - SAMEORIGIN
            X-Permitted-Cross-Domain-Policies:
                - none
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 261.110333ms
    - id: 4
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 470
        transfer_encoding: []
        trailer: {}
        host: graphql.us.jupiterone.io
        remote_addr: ""
        request_uri: ""
        body: '{"query":"\nquery GetUsersByEmail ($email: String!) {\n\tiamGetUserList(emailFilter: $email, limit: 1000) {\n\t\titems {\n\t\t\tid\n\t\t\temail\n\t\t\tnickName\n\t\t\tfirstName\n\t\t\tlastName\n\t\t\tuserGroups(limit: 3000) {\n\t\t\t\titems {\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t\tpageInfo {\n\t\t\t\t\tendCursor\n\t\t\t\t}\n\t\t\t}\n\t\t\t_timeCreated\n\t\t\t_timeUpdated\n\t\t}\n\t}\n}\n","variables":{"email":"test.user@jupiterone.com"},"operationName":"GetUsersByEmail"}'
        form: {}
        headers:
            Cache-Control:
                - no-cache
            Content-Type:
                - application/json
        url: https://graphql.us.jupiterone.io/
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 340
        uncompressed: false
        body: |
            {"data":{"iamGetUserList":{"items":[{"id":"03c55cd7-f210-48fd-9e0f-96538ef49784","email":"test.user@jupiterone.com","nickName":"test.user","firstName":null,"lastName":null,"userGroups":{"items":[{"id":"dc117a09-ee0d-43b3-bb1e-774ce0928f97"}],"pageInfo":{"endCursor":null}},"_timeCreated":"1715954859648","_timeUpdated":"1715954859648"}]}}}
        headers:
            Access-Control-Allow-Credentials:
                - "true"
            Content-Length:
                - "340"
            Content-Security-Policy:
                - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self'' https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self'' data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
            Content-Type:
                - application/json
            Cross-Origin-Embedder-Policy:
                - require-corp
            Cross-Origin-Opener-Policy:
                - same-origin
            Cross-Origin-Resource-Policy:
                - same-origin
            Expect-Ct:
                - max-age=0
            Origin-Agent-Cluster:
                - ?1
            Ratelimit-Limit:
                - "1000"
            Ratelimit-Remaining:
                - "999"
            Ratelimit-Requested:
                - "1"
            Ratelimit-Reset:
                - "1"
            Referrer-Policy:
                - no-referrer
            Strict-Transport-Security:
                - max-age=15552000; includeSubDomains
            Vary:
                - Origin
            X-Content-Type-Options:
                - nosniff
            X-Dns-Prefetch-Control:
                - "off"
            X-Download-Options:
                - noopen
            X-Frame-Options:
                - SAMEORIGIN
            X-Permitted-Cross-Domain-Policies:
                - none
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 192.939416ms
    - id: 5
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 304
        transfer_encoding: []
        trailer: {}
        host: graphql.us.jupiterone.io
        remote_addr: ""
        request_uri: ""
        body: '{"query":"\nmutation RemoveUserFromGroup ($userId: String!, $groupId: ID!) {\n\tiamDeleteGroupUsers(input: {group:$groupId,users:[$userId]}) {\n\t\tsuccess\n\t}\n}\n","variables":{"userId":"test.user@jupiterone.com","groupId":"dc117a09-ee0d-43b3-bb1e-774ce0928f97"},"operationName":"RemoveUserFromGroup"}'
        form: {}
        headers:
            Cache-Control:
                - no-cache
            Content-Type:
                - application/json
        url: https://graphql.us.jupiterone.io/
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 50
        uncompressed: false
        body: |
            {"data":{"iamDeleteGroupUsers":{"success":true}}}
        headers:
            Access-Control-Allow-Credentials:
                - "true"
            Content-Length:
                - "50"
            Content-Security-Policy:
                - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self'' https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self'' data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
            Content-Type:
                - application/json
            Cross-Origin-Embedder-Policy:
                - require-corp
            Cross-Origin-Opener-Policy:
                - same-origin
            Cross-Origin-Resource-Policy:
                - same-origin
            Expect-Ct:
                - max-age=0
            Origin-Agent-Cluster:
                - ?1
            Ratelimit-Limit:
                - "1000"
            Ratelimit-Remaining:
                - "999"
            Ratelimit-Requested:
                - "1"
            Ratelimit-Reset:
                - "1"
            Referrer-Policy:
                - no-referrer
            Strict-Transport-Security:
                - max-age=15552000; includeSubDomains
            Vary:
                - Origin
            X-Content-Type-Options:
                - nosniff
            X-Dns-Prefetch-Control:
                - "off"
            X-Download-Options:
                - noopen
            X-Frame-Options:
                - SAMEORIGIN
            X-Permitted-Cross-Domain-Policies:
                - none
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 252.496375ms
    - id: 6
      request:
        proto: HTTP/1.1
        proto_major: 1
        proto_minor: 1
        content_length: 198
        transfer_encoding: []
        trailer: {}
        host: graphql.us.jupiterone.io
        remote_addr: ""
        request_uri: ""
        body: '{"query":"\nmutation DeleteUserGroup ($name: String!) {\n\tdeleteIamGroup(name: $name) {\n\t\tsuccess\n\t}\n}\n","variables":{"name":"tf-provider-test-user-group"},"operationName":"DeleteUserGroup"}'
        form: {}
        headers:
            Cache-Control:
                - no-cache
            Content-Type:
                - application/json
        url: https://graphql.us.jupiterone.io/
        method: POST
      response:
        proto: HTTP/2.0
        proto_major: 2
        proto_minor: 0
        transfer_encoding: []
        trailer: {}
        content_length: 45
        uncompressed: false
        body: |
            {"data":{"deleteIamGroup":{"success":true}}}
        headers:
            Access-Control-Allow-Credentials:
                - "true"
            Content-Length:
                - "45"
            Content-Security-Policy:
                - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self'' https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self'' data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
            Content-Type:
                - application/json
            Cross-Origin-Embedder-Policy:
                - require-corp
            Cross-Origin-Opener-Policy:
                - same-origin
            Cross-Origin-Resource-Policy:
                - same-origin
            Expect-Ct:
                - max-age=0
            Origin-Agent-Cluster:
                - ?1
            Ratelimit-Limit:
                - "1000"
            Ratelimit-Remaining:
                - "999"
            Ratelimit-Requested:
                - "1"
            Ratelimit-Reset:
                - "1"
            Referrer-Policy:
                - no-referrer
            Strict-Transport-Security:
                - max-age=15552000; includeSubDomains
            Vary:
                - Origin
            X-Content-Type-Options:
                - nosniff
            X-Dns-Prefetch-Control:
                - "off"
            X-Download-Options:
                - noopen
            X-Frame-Options:
                - SAMEORIGIN
            X-Permitted-Cross-Domain-Policies:
                - none
            X-Xss-Protection:
                - "0"
        status: 200 OK
        code: 200
        duration: 366.907584ms
