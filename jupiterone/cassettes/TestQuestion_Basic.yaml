---
version: 1
interactions:
- request:
    body: '{"query":"\nmutation CreateQuestion ($question: CreateQuestionInput!) {\n\tcreateQuestion(question:
      $question) {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tquery\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t\ttags\n\t\tcompliance
      {\n\t\t\tstandard\n\t\t\trequirements\n\t\t\tcontrols\n\t\t}\n\t}\n}\n","variables":{"question":{"title":"tf-provider-test-question","name":"","tags":["tf_acc:1"],"description":"Test","showTrend":false,"pollingInterval":"ONE_DAY","queries":[{"query":"Find
      DataStore with classification=(''critical'' or ''sensitive'' or ''confidential''
      or ''restricted'') and encrypted!=true","version":"v1","name":"query0","resultsAre":"INFORMATIVE","includeDeleted":false}],"compliance":[],"variables":null}},"operationName":"CreateQuestion"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"createQuestion":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52","title":"tf-provider-test-question","description":"Test","pollingInterval":"ONE_DAY","queries":[{"name":"query0","query":"Find DataStore with classification=('critical' or 'sensitive' or 'confidential' or 'restricted') and encrypted!=true","version":"v1","includeDeleted":false,"resultsAre":"INFORMATIVE"}],"tags":["tf_acc:1"],"compliance":[]}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "417"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nquery GetQuestionById ($id: ID!) {\n\tquestion(id: $id) {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tquery\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t\ttags\n\t\tcompliance
      {\n\t\t\tstandard\n\t\t\trequirements\n\t\t\tcontrols\n\t\t}\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"},"operationName":"GetQuestionById"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"question":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52","title":"tf-provider-test-question","description":"Test","pollingInterval":"ONE_DAY","queries":[{"name":"query0","query":"Find DataStore with classification=('critical' or 'sensitive' or 'confidential' or 'restricted') and encrypted!=true","version":"v1","includeDeleted":false,"resultsAre":"INFORMATIVE"}],"tags":["tf_acc:1"],"compliance":[]}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "411"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nquery GetQuestionById ($id: ID!) {\n\tquestion(id: $id) {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tquery\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t\ttags\n\t\tcompliance
      {\n\t\t\tstandard\n\t\t\trequirements\n\t\t\tcontrols\n\t\t}\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"},"operationName":"GetQuestionById"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"question":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52","title":"tf-provider-test-question","description":"Test","pollingInterval":"ONE_DAY","queries":[{"name":"query0","query":"Find DataStore with classification=('critical' or 'sensitive' or 'confidential' or 'restricted') and encrypted!=true","version":"v1","includeDeleted":false,"resultsAre":"INFORMATIVE"}],"tags":["tf_acc:1"],"compliance":[]}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "411"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nquery GetQuestionById ($id: ID!) {\n\tquestion(id: $id) {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tquery\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t\ttags\n\t\tcompliance
      {\n\t\t\tstandard\n\t\t\trequirements\n\t\t\tcontrols\n\t\t}\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"},"operationName":"GetQuestionById"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"question":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52","title":"tf-provider-test-question","description":"Test","pollingInterval":"ONE_DAY","queries":[{"name":"query0","query":"Find DataStore with classification=('critical' or 'sensitive' or 'confidential' or 'restricted') and encrypted!=true","version":"v1","includeDeleted":false,"resultsAre":"INFORMATIVE"}],"tags":["tf_acc:1"],"compliance":[]}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "411"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nmutation UpdateQuestion ($id: ID!, $update: QuestionUpdate!)
      {\n\tupdateQuestion(id: $id, update: $update) {\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52","update":{"title":"tf-provider-test-question","queries":[{"query":"Find
      DataStore with classification=(''critical'' or ''sensitive'' or ''confidential''
      or ''restricted'') and encrypted!=true","version":"v1","name":"query0","resultsAre":"INFORMATIVE","includeDeleted":false}],"compliance":[],"tags":["tf_acc:2"],"description":"Test","showTrend":false,"pollingInterval":"ONE_DAY"}},"operationName":"UpdateQuestion"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"updateQuestion":{"pollingInterval":"ONE_DAY","queries":[{"name":"query0","version":"v1","includeDeleted":false,"resultsAre":"INFORMATIVE"}]}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "153"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nquery GetQuestionById ($id: ID!) {\n\tquestion(id: $id) {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tquery\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t\ttags\n\t\tcompliance
      {\n\t\t\tstandard\n\t\t\trequirements\n\t\t\tcontrols\n\t\t}\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"},"operationName":"GetQuestionById"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"question":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52","title":"tf-provider-test-question","description":"Test","pollingInterval":"ONE_DAY","queries":[{"name":"query0","query":"Find DataStore with classification=('critical' or 'sensitive' or 'confidential' or 'restricted') and encrypted!=true","version":"v1","includeDeleted":false,"resultsAre":"INFORMATIVE"}],"tags":["tf_acc:2"],"compliance":[]}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "411"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nquery GetQuestionById ($id: ID!) {\n\tquestion(id: $id) {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tquery\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t\ttags\n\t\tcompliance
      {\n\t\t\tstandard\n\t\t\trequirements\n\t\t\tcontrols\n\t\t}\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"},"operationName":"GetQuestionById"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"question":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52","title":"tf-provider-test-question","description":"Test","pollingInterval":"ONE_DAY","queries":[{"name":"query0","query":"Find DataStore with classification=('critical' or 'sensitive' or 'confidential' or 'restricted') and encrypted!=true","version":"v1","includeDeleted":false,"resultsAre":"INFORMATIVE"}],"tags":["tf_acc:2"],"compliance":[]}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "411"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nmutation DeleteQuestion ($id: ID!) {\n\tdeleteQuestion(id:
      $id) {\n\t\tid\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"},"operationName":"DeleteQuestion"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"data":{"deleteQuestion":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"}}}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "74"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
- request:
    body: '{"query":"\nquery GetQuestionById ($id: ID!) {\n\tquestion(id: $id) {\n\t\tid\n\t\ttitle\n\t\tdescription\n\t\tpollingInterval\n\t\tqueries
      {\n\t\t\tname\n\t\t\tquery\n\t\t\tversion\n\t\t\tincludeDeleted\n\t\t\tresultsAre\n\t\t}\n\t\ttags\n\t\tcompliance
      {\n\t\t\tstandard\n\t\t\trequirements\n\t\t\tcontrols\n\t\t}\n\t}\n}\n","variables":{"id":"4542a0e0-07b2-4471-a879-16720ca04f52"},"operationName":"GetQuestionById"}'
    form: {}
    headers:
      Cache-Control:
      - no-cache
      Content-Type:
      - application/json
    url: https://api.us.jupiterone.io/graphql
    method: POST
  response:
    body: |
      {"errors":[{"message":"Unable to fetch question. Reason: Cannot fetch question that does not exist","extensions":{"code":"BAD_USER_INPUT","serviceName":"questions","exception":{"stacktrace":["UserInputError: Unable to fetch question. Reason: Cannot fetch question that does not exist","    at getQuestion2 (/var/task/index.js:808038:11)","    at runMicrotasks (<anonymous>)","    at processTicksAndRejections (internal/process/task_queues.js:95:5)","    at async Promise.all (index 0)"],"message":"Unable to fetch question. Reason: Cannot fetch question that does not exist","locations":[],"path":["question"]}}}],"data":null}
    headers:
      Access-Control-Allow-Credentials:
      - "true"
      Content-Length:
      - "627"
      Content-Security-Policy:
      - 'default-src ''self'';base-uri ''self'';block-all-mixed-content;font-src ''self''
        https: data:;form-action ''self'';frame-ancestors ''self'';img-src ''self''
        data:;object-src ''none'';script-src ''self'';script-src-attr ''none'';style-src
        ''self'' https: ''unsafe-inline'';upgrade-insecure-requests'
      Content-Type:
      - application/json
      Cross-Origin-Embedder-Policy:
      - require-corp
      Cross-Origin-Opener-Policy:
      - same-origin
      Cross-Origin-Resource-Policy:
      - same-origin
      Expect-Ct:
      - max-age=0
      Origin-Agent-Cluster:
      - ?1
      Ratelimit-Limit:
      - "1000"
      Ratelimit-Remaining:
      - "999"
      Ratelimit-Requested:
      - "1"
      Ratelimit-Reset:
      - "1"
      Referrer-Policy:
      - no-referrer
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Vary:
      - Origin
      X-Content-Type-Options:
      - nosniff
      X-Dns-Prefetch-Control:
      - "off"
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Xss-Protection:
      - "0"
    status: 200 OK
    code: 200
    duration: ""
